[
  {
    "id": "KeyVaultClient()",
    "longname": "KeyVaultClient",
    "name": "KeyVaultClient",
    "kind": "constructor",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "credentials"
          ]
        },
        "description": "Credentials needed for the client to connect to Azure.",
        "name": "credentials"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The parameter options",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "optional": true,
        "description": "Filters to be added to the request pipeline",
        "name": "options.filters"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Options for the underlying request object\r{@link https://github.com/request/request#requestoptions-callback Options doc}",
        "name": "options.requestOptions"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "If set to true, turn off default retry policy",
        "name": "options.noRetryPolicy"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Client Api Version.",
        "name": "options.apiVersion"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Gets or sets the preferred language for the response.",
        "name": "options.acceptLanguage"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Gets or sets the retry timeout in seconds for Long Running Operations. Default value is 30.",
        "name": "options.longRunningOperationRetryTimeout"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true.",
        "name": "options.generateClientRequestId"
      }
    ],
    "order": 17
  },
  {
    "id": "KeyVaultClient()",
    "longname": "KeyVaultClient",
    "name": "KeyVaultClient",
    "kind": "constructor",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "credentials"
          ]
        },
        "description": "Credentials needed for the client to connect to Azure.",
        "name": "credentials"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The parameter options",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "optional": true,
        "description": "Filters to be added to the request pipeline",
        "name": "options.filters"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Options for the underlying request object\r{@link https://github.com/request/request#requestoptions-callback Options doc}",
        "name": "options.requestOptions"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "If set to true, turn off default retry policy",
        "name": "options.noRetryPolicy"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Client API version.",
        "name": "options.apiVersion"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Gets or sets the preferred language for the response.",
        "name": "options.acceptLanguage"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Gets or sets the retry timeout in seconds for Long Running Operations. Default value is 30.",
        "name": "options.longRunningOperationRetryTimeout"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true.",
        "name": "options.generateClientRequestId"
      }
    ],
    "order": 169
  },
  {
    "id": "KeyVaultCredentials()",
    "longname": "KeyVaultCredentials",
    "name": "KeyVaultCredentials",
    "kind": "constructor",
    "description": "An object that performs authentication for Key Vault.",
    "memberof": "KeyVaultCredentials",
    "params": [
      {
        "type": {
          "names": [
            "KeyVaultCredentials~authRequest"
          ]
        },
        "description": "A callback that receives a challenge and returns an authentication token.",
        "name": "authenticator"
      }
    ],
    "order": 269
  },
  {
    "id": "ObjectIdentifier()",
    "longname": "ObjectIdentifier",
    "name": "ObjectIdentifier",
    "kind": "constructor",
    "description": "An identifier for an Azure Key Vault resource.",
    "memberof": "ObjectIdentifier",
    "params": [],
    "order": 383
  },
  {
    "longname": "",
    "name": "",
    "kind": "class",
    "scope": "global",
    "meta": {
      "lineno": 65,
      "filename": "jwk.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 13
  },
  {
    "id": "KeyVaultClient",
    "longname": "KeyVaultClient",
    "name": "KeyVaultClient",
    "kind": "class",
    "scope": "global",
    "description": "Initializes a new instance of the KeyVaultClient class.",
    "meta": {
      "lineno": 190,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 16
  },
  {
    "id": "KeyVaultClient",
    "longname": "KeyVaultClient",
    "name": "KeyVaultClient",
    "kind": "class",
    "scope": "global",
    "description": "Initializes a new instance of the KeyVaultClient class.",
    "meta": {
      "lineno": 8425,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 168
  },
  {
    "id": "KeyVaultCredentials",
    "longname": "KeyVaultCredentials",
    "name": "KeyVaultCredentials",
    "kind": "class",
    "scope": "global",
    "meta": {
      "lineno": 30,
      "filename": "keyVaultCredentials.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 268
  },
  {
    "id": "The certificate management attributes.",
    "longname": "The certificate management attributes.",
    "name": "The certificate management attributes.",
    "kind": "class",
    "scope": "global",
    "description": "Initializes a new instance of the CertificateAttributes class.",
    "meta": {
      "lineno": 15,
      "filename": "certificateAttributes.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 280
  },
  {
    "id": "The attributes of a key managed by the key vault service.",
    "longname": "The attributes of a key managed by the key vault service.",
    "name": "The attributes of a key managed by the key vault service.",
    "kind": "class",
    "scope": "global",
    "description": "Initializes a new instance of the KeyAttributes class.",
    "meta": {
      "lineno": 15,
      "filename": "keyAttributes.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 326
  },
  {
    "id": "The secret management attributes.",
    "longname": "The secret management attributes.",
    "name": "The secret management attributes.",
    "kind": "class",
    "scope": "global",
    "description": "Initializes a new instance of the SecretAttributes class.",
    "meta": {
      "lineno": 15,
      "filename": "secretAttributes.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 362
  },
  {
    "id": "ObjectIdentifier",
    "longname": "ObjectIdentifier",
    "name": "ObjectIdentifier",
    "kind": "class",
    "scope": "global",
    "meta": {
      "lineno": 8,
      "filename": "objectIdentifier.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 382
  },
  {
    "id": "RESOURCE_ID",
    "longname": "RESOURCE_ID",
    "name": "RESOURCE_ID",
    "kind": "member",
    "scope": "global",
    "description": "Identifier of the resource on which Key Vault users and service principals must authenticate.",
    "meta": {
      "lineno": 25,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 14
  },
  {
    "id": "actionType",
    "longname": "actionType",
    "name": "actionType",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the Action class.",
    "description": "The type of the action. Possible values\rinclude: 'EmailContacts', 'AutoRenew'",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 13,
      "filename": "action.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 272
  },
  {
    "id": "phone",
    "longname": "phone",
    "name": "phone",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the AdministratorDetails class.",
    "description": "First name.",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 13,
      "filename": "administratorDetails.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 274
  },
  {
    "id": "updated",
    "longname": "updated",
    "name": "updated",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the Attributes class.",
    "description": "Determines whether the object is enabled.",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 13,
      "filename": "attributes.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 276
  },
  {
    "id": "value",
    "longname": "value",
    "name": "value",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the BackupKeyResult class.",
    "description": "The backup blob containing the backed up key.",
    "type": {
      "names": [
        "buffer"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 13,
      "filename": "backupKeyResult.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 278
  },
  {
    "id": "tags",
    "longname": "tags",
    "name": "tags",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the CertificateBundle class.",
    "description": "The certificate id.",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "certificateBundle.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 282
  },
  {
    "id": "tags",
    "longname": "tags",
    "name": "tags",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the CertificateCreateParameters class.",
    "description": "The management policy for the\rcertificate.",
    "type": {
      "names": [
        "object"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "certificateCreateParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 284
  },
  {
    "id": "tags",
    "longname": "tags",
    "name": "tags",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the CertificateImportParameters class.",
    "description": "Base64 encoded representation of\rthe certificate object to import. This certificate needs to contain the\rprivate key.",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "certificateImportParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 286
  },
  {
    "id": "provider",
    "longname": "provider",
    "name": "provider",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the CertificateIssuerItem class.",
    "description": "Certificate Identifier.",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 13,
      "filename": "certificateIssuerItem.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 288
  },
  {
    "id": "nextLink",
    "longname": "nextLink",
    "name": "nextLink",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the CertificateIssuerListResult class.",
    "description": "The URL to get the next set of certificate\rissuers.",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 13,
      "filename": "certificateIssuerListResult.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 290
  },
  {
    "id": "x509Thumbprint",
    "longname": "x509Thumbprint",
    "name": "x509Thumbprint",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the CertificateItem class.",
    "description": "Certificate identifier.",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "certificateItem.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 296
  },
  {
    "id": "nextLink",
    "longname": "nextLink",
    "name": "nextLink",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the CertificateListResult class.",
    "description": "The URL to get the next set of certificates.",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 13,
      "filename": "certificateListResult.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 298
  },
  {
    "id": "tags",
    "longname": "tags",
    "name": "tags",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the CertificateMergeParameters class.",
    "description": "The certificate or the certificate chain to\rmerge.",
    "type": {
      "names": [
        "array"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "certificateMergeParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 300
  },
  {
    "id": "requestId",
    "longname": "requestId",
    "name": "requestId",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the CertificateOperation class.",
    "description": "The certificate id.",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "certificateOperation.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 302
  },
  {
    "id": "cancellationRequested",
    "longname": "cancellationRequested",
    "name": "cancellationRequested",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the CertificateOperationUpdateParameter class.",
    "description": "Indicates if cancellation was\rrequested on the certificate operation.",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 13,
      "filename": "certificateOperationUpdateParameter.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 304
  },
  {
    "id": "attributes",
    "longname": "attributes",
    "name": "attributes",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the CertificatePolicy class.",
    "description": "The certificate id.",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "certificatePolicy.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 306
  },
  {
    "id": "tags",
    "longname": "tags",
    "name": "tags",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the CertificateUpdateParameters class.",
    "description": "The management policy for the\rcertificate.",
    "type": {
      "names": [
        "object"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "certificateUpdateParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 308
  },
  {
    "id": "phone",
    "longname": "phone",
    "name": "phone",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the Contact class.",
    "description": "Email addresss.",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 13,
      "filename": "contact.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 310
  },
  {
    "id": "contactList",
    "longname": "contactList",
    "name": "contactList",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the Contacts class.",
    "description": "Identifier for the contacts collection.",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "contacts.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 312
  },
  {
    "id": "innerError",
    "longname": "innerError",
    "name": "innerError",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the ErrorModel class.",
    "description": "The error code.",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "errorModel.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 314
  },
  {
    "id": "updated",
    "longname": "updated",
    "name": "updated",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the IssuerAttributes class.",
    "description": "Determines whether the issuer is enabled.",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 13,
      "filename": "issuerAttributes.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 316
  },
  {
    "id": "password",
    "longname": "password",
    "name": "password",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the IssuerCredentials class.",
    "description": "The user name/account name/account id.",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 13,
      "filename": "issuerCredentials.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 320
  },
  {
    "id": "certificateType",
    "longname": "certificateType",
    "name": "certificateType",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the IssuerParameters class.",
    "description": "Name of the referenced issuer object or reserved\rnames; for example, 'Self' or 'Unknown'.",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 13,
      "filename": "issuerParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 322
  },
  {
    "id": "t",
    "longname": "t",
    "name": "t",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the JsonWebKey class.",
    "description": "Key identifier.",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 13,
      "filename": "jsonWebKey.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 324
  },
  {
    "id": "managed",
    "longname": "managed",
    "name": "managed",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the KeyBundle class.",
    "description": "The Json web key.",
    "type": {
      "names": [
        "object"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "keyBundle.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 328
  },
  {
    "id": "tags",
    "longname": "tags",
    "name": "tags",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the KeyCreateParameters class.",
    "description": "The type of key to create. For valid key types, see\rJsonWebKeyType. Supported JsonWebKey key types (kty) for Elliptic Curve,\rRSA, HSM, Octet. Possible values include: 'EC', 'RSA', 'RSA-HSM', 'oct'",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "keyCreateParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 330
  },
  {
    "id": "tags",
    "longname": "tags",
    "name": "tags",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the KeyImportParameters class.",
    "description": "Whether to import as a hardware key (HSM) or\rsoftware key.",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "keyImportParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 332
  },
  {
    "id": "managed",
    "longname": "managed",
    "name": "managed",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the KeyItem class.",
    "description": "Key identifier.",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "keyItem.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 334
  },
  {
    "id": "nextLink",
    "longname": "nextLink",
    "name": "nextLink",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the KeyListResult class.",
    "description": "The URL to get the next set of keys.",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 13,
      "filename": "keyListResult.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 336
  },
  {
    "id": "result",
    "longname": "result",
    "name": "result",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the KeyOperationResult class.",
    "description": "Key identifier",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 13,
      "filename": "keyOperationResult.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 338
  },
  {
    "id": "value",
    "longname": "value",
    "name": "value",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the KeyOperationsParameters class.",
    "description": "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 13,
      "filename": "keyOperationsParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 340
  },
  {
    "id": "reuseKey",
    "longname": "reuseKey",
    "name": "reuseKey",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the KeyProperties class.",
    "description": "Indicates if the private key can be exported.",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 13,
      "filename": "keyProperties.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 342
  },
  {
    "id": "keyBundleBackup",
    "longname": "keyBundleBackup",
    "name": "keyBundleBackup",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the KeyRestoreParameters class.",
    "description": "The backup blob associated with a key\rbundle.",
    "type": {
      "names": [
        "buffer"
      ]
    },
    "meta": {
      "lineno": 13,
      "filename": "keyRestoreParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 344
  },
  {
    "id": "value",
    "longname": "value",
    "name": "value",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the KeySignParameters class.",
    "description": "The signing/verification algorithm identifier.\rFor more information on possible algorithm types, see\rJsonWebKeySignatureAlgorithm. Possible values include: 'RS256', 'RS384',\r'RS512', 'RSNULL'",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 13,
      "filename": "keySignParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 346
  },
  {
    "id": "tags",
    "longname": "tags",
    "name": "tags",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the KeyUpdateParameters class.",
    "description": "Json web key operations. For more information on\rpossible key operations, see JsonWebKeyOperation.",
    "type": {
      "names": [
        "array"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "keyUpdateParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 348
  },
  {
    "id": "signature",
    "longname": "signature",
    "name": "signature",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the KeyVerifyParameters class.",
    "description": "The signing/verification algorithm. For more\rinformation on possible algorithm types, see JsonWebKeySignatureAlgorithm.\rPossible values include: 'RS256', 'RS384', 'RS512', 'RSNULL'",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 13,
      "filename": "keyVerifyParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 352
  },
  {
    "id": "value",
    "longname": "value",
    "name": "value",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the KeyVerifyResult class.",
    "description": "True if the signature is verified, otherwise\rfalse.",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 13,
      "filename": "keyVerifyResult.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 354
  },
  {
    "id": "adminDetails",
    "longname": "adminDetails",
    "name": "adminDetails",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the OrganizationDetails class.",
    "description": "Id of the organization.",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "organizationDetails.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 358
  },
  {
    "id": "value",
    "longname": "value",
    "name": "value",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the PendingCertificateSigningRequestResult class.",
    "description": "The pending certificate signing request as Base64\rencoded string.",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 13,
      "filename": "pendingCertificateSigningRequestResult.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 360
  },
  {
    "id": "managed",
    "longname": "managed",
    "name": "managed",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the SecretBundle class.",
    "description": "The secret value.",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "secretBundle.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 364
  },
  {
    "id": "managed",
    "longname": "managed",
    "name": "managed",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the SecretItem class.",
    "description": "Secret identifier.",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "secretItem.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 366
  },
  {
    "id": "nextLink",
    "longname": "nextLink",
    "name": "nextLink",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the SecretListResult class.",
    "description": "The URL to get the next set of secrets.",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 13,
      "filename": "secretListResult.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 368
  },
  {
    "id": "contentType",
    "longname": "contentType",
    "name": "contentType",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the SecretProperties class.",
    "description": "The media type (MIME type).",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 13,
      "filename": "secretProperties.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 370
  },
  {
    "id": "secretAttributes",
    "longname": "secretAttributes",
    "name": "secretAttributes",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the SecretSetParameters class.",
    "description": "The value of the secret.",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "secretSetParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 372
  },
  {
    "id": "tags",
    "longname": "tags",
    "name": "tags",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the SecretUpdateParameters class.",
    "description": "Type of the secret value such as a password.",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "secretUpdateParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 374
  },
  {
    "id": "upns",
    "longname": "upns",
    "name": "upns",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the SubjectAlternativeNames class.",
    "description": "Email addresses.",
    "type": {
      "names": [
        "array"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 13,
      "filename": "subjectAlternativeNames.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 376
  },
  {
    "id": "daysBeforeExpiry",
    "longname": "daysBeforeExpiry",
    "name": "daysBeforeExpiry",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the Trigger class.",
    "description": "Percentage of lifetime at which to\rtrigger. Value should be between 1 and 99.",
    "type": {
      "names": [
        "number"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 13,
      "filename": "trigger.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 378
  },
  {
    "id": "validityInMonths",
    "longname": "validityInMonths",
    "name": "validityInMonths",
    "kind": "member",
    "scope": "global",
    "classdesc": "Initializes a new instance of the X509CertificateProperties class.",
    "description": "The subject name. Should be a valid X509\rdistinguished Name.",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "x509CertificateProperties.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 380
  },
  {
    "id": "JsonWebKeyEncryptionAlgorithms",
    "longname": "JsonWebKeyEncryptionAlgorithms",
    "name": "JsonWebKeyEncryptionAlgorithms",
    "kind": "namespace",
    "scope": "global",
    "description": "Constants that identify encryption algorithms.",
    "params": [],
    "meta": {
      "lineno": 24,
      "filename": "jwk.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 0
  },
  {
    "id": "JsonWebKeySignatureAlgorithms",
    "longname": "JsonWebKeySignatureAlgorithms",
    "name": "JsonWebKeySignatureAlgorithms",
    "kind": "namespace",
    "scope": "global",
    "description": "Constants that identify signing algorithms.",
    "params": [],
    "meta": {
      "lineno": 35,
      "filename": "jwk.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 3
  },
  {
    "id": "JsonWebKeyType",
    "longname": "JsonWebKeyType",
    "name": "JsonWebKeyType",
    "kind": "namespace",
    "scope": "global",
    "description": "Constants that identify JWK (Json Web Key) types.",
    "params": [],
    "meta": {
      "lineno": 50,
      "filename": "jwk.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 8
  },
  {
    "id": "_getPendingCertificateSigningRequest",
    "longname": "_getPendingCertificateSigningRequest",
    "name": "_getPendingCertificateSigningRequest",
    "kind": "function",
    "scope": "global",
    "description": "Gets the certificate operation response.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, e.g.\rhttps://myvault.vault.azure.net",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link CertificateOperation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 57,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 15
  },
  {
    "id": "createKeyVaultClient",
    "longname": "createKeyVaultClient",
    "name": "createKeyVaultClient",
    "kind": "function",
    "scope": "global",
    "description": "Creates a new {@linkcode KeyVaultClient} object.",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The credentials, typically a {@linkcode KeyVaultCredentials} object. If null, an authentication filter must be provided.",
        "name": "credentials"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The parameter options",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "Array"
          ]
        },
        "optional": true,
        "description": "Filters to be added to the request pipeline",
        "name": "options.filters"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Options for the underlying request object\r{@link https://github.com/request/request#requestoptions-callback Options doc}",
        "name": "options.requestOptions"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "If set to true, turn off default retry policy",
        "name": "options.noRetryPolicy"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Client Api Version.",
        "name": "options.apiVersion"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Gets or sets the preferred language for the response.",
        "name": "options.acceptLanguage"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Gets or sets the retry timeout in seconds for Long Running Operations. Default value is 30.",
        "name": "options.longRunningOperationRetryTimeout"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true.",
        "name": "options.generateClientRequestId"
      }
    ],
    "meta": {
      "lineno": 4460,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 118
  },
  {
    "id": "_createKey",
    "longname": "_createKey",
    "name": "_createKey",
    "kind": "function",
    "scope": "global",
    "description": "Creates a new key, stores it, then returns key parameters and attributes to\rthe client. The create key operation can be used to create any key type in\rAzure Key Vault. If the named key already exists, Azure Key Vault creates a\rnew version of the key. Authorization: Requires the keys/create permission.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name for the new key. The system will generate\rthe version name for the new key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The type of key to create. For valid key types, see\rJsonWebKeyType. Supported JsonWebKey key types (kty) for Elliptic Curve,\rRSA, HSM, Octet. Possible values include: 'EC', 'RSA', 'RSA-HSM', 'oct'",
        "name": "kty"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The key size in bytes. For example, 1024\ror 2048.",
        "name": "options.keySize"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "name": "options.keyOps"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "name": "options.keyAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the\robject is enabled.",
        "name": "options.keyAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in UTC.",
        "name": "options.keyAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.keyAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 76,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 119
  },
  {
    "id": "_importKey",
    "longname": "_importKey",
    "name": "_importKey",
    "kind": "function",
    "scope": "global",
    "description": "Imports an externally created key, stores it, and returns key parameters and\rattributes to the client. The import key operation may be used to import any\rkey type into an Azure Key Vault. If the named key already exists, Azure Key\rVault creates a new version of the key. Authorization: requires the\rkeys/import permission.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Name for the imported key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "The Json web key",
        "name": "key"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Key identifier.",
        "name": "key.kid"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Supported JsonWebKey key types (kty) for Elliptic\rCurve, RSA, HSM, Octet. Kty is usually set to RSA. Possible values include:\r'EC', 'RSA', 'RSA-HSM', 'oct'",
        "name": "key.kty"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "name": "key.keyOps"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA modulus.",
        "name": "key.n"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA public exponent.",
        "name": "key.e"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA private exponent.",
        "name": "key.d"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA private key parameter.",
        "name": "key.dp"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA private key parameter.",
        "name": "key.dq"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA private key parameter.",
        "name": "key.qi"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA secret prime.",
        "name": "key.p"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA secret prime, with p < q.",
        "name": "key.q"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "Symmetric key.",
        "name": "key.k"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "HSM Token, used with 'Bring Your Own Key'.",
        "name": "key.t"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Whether to import as a hardware key (HSM) or\rsoftware key.",
        "name": "options.hsm"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The key management attributes.",
        "name": "options.keyAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the\robject is enabled.",
        "name": "options.keyAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in UTC.",
        "name": "options.keyAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.keyAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 327,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 120
  },
  {
    "id": "_deleteKey",
    "longname": "_deleteKey",
    "name": "_deleteKey",
    "kind": "function",
    "scope": "global",
    "description": "Deletes a key of any type from storage in Azure Key Vault. The delete key\roperation cannot be used to remove individual versions of a key. This\roperation removes the cryptographic material associated with the key, which\rmeans the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt\roperations. Authorization: Requires the keys/delete permission.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key to delete.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 518,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 121
  },
  {
    "id": "_updateKey",
    "longname": "_updateKey",
    "name": "_updateKey",
    "kind": "function",
    "scope": "global",
    "description": "The update key operation changes specified attributes of a stored key and\rcan be applied to any key type and key version stored in Azure Key Vault.\rThe cryptographic material of a key itself cannot be changed. In order to\rperform this operation, the key must already exist in the Key Vault.\rAuthorization: requires the keys/update permission.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of key to update.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the key to update.",
        "name": "keyVersion"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Json web key operations. For more\rinformation on possible key operations, see JsonWebKeyOperation.",
        "name": "options.keyOps"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "name": "options.keyAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the\robject is enabled.",
        "name": "options.keyAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in UTC.",
        "name": "options.keyAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.keyAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 682,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 122
  },
  {
    "id": "_getKey",
    "longname": "_getKey",
    "name": "_getKey",
    "kind": "function",
    "scope": "global",
    "description": "Gets the public part of a stored key. The get key operation is applicable to\rall key types. If the requested key is symmetric, then no key material is\rreleased in the response. Authorization: Requires the keys/get permission.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key to get.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Adding the version parameter retrieves a specific\rversion of a key.",
        "name": "keyVersion"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 872,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 123
  },
  {
    "id": "_getKeyVersions",
    "longname": "_getKeyVersions",
    "name": "_getKeyVersions",
    "kind": "function",
    "scope": "global",
    "description": "Retrieves a list of individual key versions with the same key name. The full\rkey identifier, attributes, and tags are provided in the response.\rAuthorization: Requires the keys/list permission.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 1024,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 124
  },
  {
    "id": "_getKeys",
    "longname": "_getKeys",
    "name": "_getKeys",
    "kind": "function",
    "scope": "global",
    "description": "List keys in the specified vault.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 1185,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 125
  },
  {
    "id": "_backupKey",
    "longname": "_backupKey",
    "name": "_backupKey",
    "kind": "function",
    "scope": "global",
    "description": "Requests that a backup of the specified key be downloaded to the client.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link BackupKeyResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 1341,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 126
  },
  {
    "id": "_restoreKey",
    "longname": "_restoreKey",
    "name": "_restoreKey",
    "kind": "function",
    "scope": "global",
    "description": "Restores a backed up key to a vault.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "description": "The backup blob associated with a key\rbundle.",
        "name": "keyBundleBackup"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 1485,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 127
  },
  {
    "id": "_encrypt",
    "longname": "_encrypt",
    "name": "_encrypt",
    "kind": "function",
    "scope": "global",
    "description": "Encrypts an arbitrary sequence of bytes using an encryption key that is\rstored in a key vault.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the key.",
        "name": "keyVersion"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyOperationResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 1654,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 128
  },
  {
    "id": "_decrypt",
    "longname": "_decrypt",
    "name": "_decrypt",
    "kind": "function",
    "scope": "global",
    "description": "Decrypts a single block of encrypted data.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the key.",
        "name": "keyVersion"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyOperationResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 1840,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 129
  },
  {
    "id": "_sign",
    "longname": "_sign",
    "name": "_sign",
    "kind": "function",
    "scope": "global",
    "description": "Creates a signature from a digest using the specified key.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the key.",
        "name": "keyVersion"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The signing/verification algorithm identifier. For\rmore information on possible algorithm types, see\rJsonWebKeySignatureAlgorithm. Possible values include: 'RS256', 'RS384',\r'RS512', 'RSNULL'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyOperationResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 2028,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 130
  },
  {
    "id": "_verify",
    "longname": "_verify",
    "name": "_verify",
    "kind": "function",
    "scope": "global",
    "description": "Verifies a signature using a specified key.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the key.",
        "name": "keyVersion"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The signing/verification algorithm. For more\rinformation on possible algorithm types, see JsonWebKeySignatureAlgorithm.\rPossible values include: 'RS256', 'RS384', 'RS512', 'RSNULL'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "description": "The digest used for signing.",
        "name": "digest"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "description": "The signature to be verified.",
        "name": "signature"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyVerifyResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 2217,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 131
  },
  {
    "id": "_wrapKey",
    "longname": "_wrapKey",
    "name": "_wrapKey",
    "kind": "function",
    "scope": "global",
    "description": "Wraps a symmetric key using a specified key.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the key.",
        "name": "keyVersion"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyOperationResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 2407,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 132
  },
  {
    "id": "_unwrapKey",
    "longname": "_unwrapKey",
    "name": "_unwrapKey",
    "kind": "function",
    "scope": "global",
    "description": "Unwraps a symmetric key using the specified key that was initially used for\rwrapping that key.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the key.",
        "name": "keyVersion"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyOperationResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 2594,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 133
  },
  {
    "id": "_setSecret",
    "longname": "_setSecret",
    "name": "_setSecret",
    "kind": "function",
    "scope": "global",
    "description": "Sets a secret in a specified key vault.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the secret.",
        "name": "secretName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The value of the secret.",
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of the secret value such as a\rpassword.",
        "name": "options.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The secret management attributes.",
        "name": "options.secretAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the\robject is enabled.",
        "name": "options.secretAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in UTC.",
        "name": "options.secretAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.secretAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 2790,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 134
  },
  {
    "id": "_deleteSecret",
    "longname": "_deleteSecret",
    "name": "_deleteSecret",
    "kind": "function",
    "scope": "global",
    "description": "Deletes a secret from a specified key vault.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the secret.",
        "name": "secretName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 2977,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 135
  },
  {
    "id": "_updateSecret",
    "longname": "_updateSecret",
    "name": "_updateSecret",
    "kind": "function",
    "scope": "global",
    "description": "Updates the attributes associated with a specified secret in a given key\rvault.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the secret.",
        "name": "secretName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the secret.",
        "name": "secretVersion"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of the secret value such as a\rpassword.",
        "name": "options.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The secret management attributes.",
        "name": "options.secretAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the\robject is enabled.",
        "name": "options.secretAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in UTC.",
        "name": "options.secretAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.secretAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 3138,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 136
  },
  {
    "id": "_getSecret",
    "longname": "_getSecret",
    "name": "_getSecret",
    "kind": "function",
    "scope": "global",
    "description": "Get a specified secret from a given key vault.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the secret.",
        "name": "secretName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the secret.",
        "name": "secretVersion"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 3321,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 137
  },
  {
    "id": "_getSecrets",
    "longname": "_getSecrets",
    "name": "_getSecrets",
    "kind": "function",
    "scope": "global",
    "description": "List secrets in a specified key vault",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 3469,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 138
  },
  {
    "id": "_getSecretVersions",
    "longname": "_getSecretVersions",
    "name": "_getSecretVersions",
    "kind": "function",
    "scope": "global",
    "description": "List the versions of the specified secret.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the secret.",
        "name": "secretName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 3628,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 139
  },
  {
    "id": "_getCertificates",
    "longname": "_getCertificates",
    "name": "_getCertificates",
    "kind": "function",
    "scope": "global",
    "description": "List certificates in a specified key vault",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 3789,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 140
  },
  {
    "id": "_deleteCertificate",
    "longname": "_deleteCertificate",
    "name": "_deleteCertificate",
    "kind": "function",
    "scope": "global",
    "description": "Deletes a certificate from a specified key vault.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 3945,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 141
  },
  {
    "id": "_setCertificateContacts",
    "longname": "_setCertificateContacts",
    "name": "_setCertificateContacts",
    "kind": "function",
    "scope": "global",
    "description": "Sets the certificate contacts for the specified key vault.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "The contacts for the key vault certificate.",
        "name": "contacts"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "The contact list for the vault\rcertificates.",
        "name": "contacts.contactList"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Contacts} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 4091,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 142
  },
  {
    "id": "_getCertificateContacts",
    "longname": "_getCertificateContacts",
    "name": "_getCertificateContacts",
    "kind": "function",
    "scope": "global",
    "description": "Lists the certificate contacts for a specified key vault.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Contacts} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 4245,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 143
  },
  {
    "id": "_deleteCertificateContacts",
    "longname": "_deleteCertificateContacts",
    "name": "_deleteCertificateContacts",
    "kind": "function",
    "scope": "global",
    "description": "Deletes the certificate contacts for a specified key vault.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Contacts} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 4382,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 144
  },
  {
    "id": "_getCertificateIssuers",
    "longname": "_getCertificateIssuers",
    "name": "_getCertificateIssuers",
    "kind": "function",
    "scope": "global",
    "description": "List certificate issuers for a specified key vault.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateIssuerListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 4523,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 145
  },
  {
    "id": "_setCertificateIssuer",
    "longname": "_setCertificateIssuer",
    "name": "_setCertificateIssuer",
    "kind": "function",
    "scope": "global",
    "description": "Sets the specified certificate issuer.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the issuer.",
        "name": "issuerName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The issuer provider.",
        "name": "provider"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The credentials to be used for the\rissuer.",
        "name": "options.credentials"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The user name/account\rname/account id.",
        "name": "options.credentials.accountId"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The password/secret/account\rkey.",
        "name": "options.credentials.password"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Details of the organization as\rprovided to the issuer.",
        "name": "options.organizationDetails"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Id of the organization.",
        "name": "options.organizationDetails.id"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Details of the\rorganization administrator.",
        "name": "options.organizationDetails.adminDetails"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Attributes of the issuer object.",
        "name": "options.attributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the issuer\ris enabled.",
        "name": "options.attributes.enabled"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link IssuerBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 4703,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 146
  },
  {
    "id": "_updateCertificateIssuer",
    "longname": "_updateCertificateIssuer",
    "name": "_updateCertificateIssuer",
    "kind": "function",
    "scope": "global",
    "description": "Updates the specified certificate issuer.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the issuer.",
        "name": "issuerName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The issuer provider.",
        "name": "options.provider"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The credentials to be used for the\rissuer.",
        "name": "options.credentials"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The user name/account\rname/account id.",
        "name": "options.credentials.accountId"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The password/secret/account\rkey.",
        "name": "options.credentials.password"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Details of the organization as\rprovided to the issuer.",
        "name": "options.organizationDetails"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Id of the organization.",
        "name": "options.organizationDetails.id"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Details of the\rorganization administrator.",
        "name": "options.organizationDetails.adminDetails"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Attributes of the issuer object.",
        "name": "options.attributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the issuer\ris enabled.",
        "name": "options.attributes.enabled"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link IssuerBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 4898,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 147
  },
  {
    "id": "_getCertificateIssuer",
    "longname": "_getCertificateIssuer",
    "name": "_getCertificateIssuer",
    "kind": "function",
    "scope": "global",
    "description": "Lists the specified certificate issuer.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the issuer.",
        "name": "issuerName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link IssuerBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 5070,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 148
  },
  {
    "id": "_deleteCertificateIssuer",
    "longname": "_deleteCertificateIssuer",
    "name": "_deleteCertificateIssuer",
    "kind": "function",
    "scope": "global",
    "description": "Deletes the specified certificate issuer.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the issuer.",
        "name": "issuerName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link IssuerBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 5213,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 149
  },
  {
    "id": "_createCertificate",
    "longname": "_createCertificate",
    "name": "_createCertificate",
    "kind": "function",
    "scope": "global",
    "description": "Creates a new certificate. If this is the first version, the certificate\rresource is created.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The management policy for the\rcertificate.",
        "name": "options.certificatePolicy"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the\rkey backing a certificate.",
        "name": "options.certificatePolicy.keyProperties"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the private key can be exported.",
        "name": "options.certificatePolicy.keyProperties.exportable"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The key\rtype.",
        "name": "options.certificatePolicy.keyProperties.keyType"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The key\rsize in bytes. For example;  1024 or 2048.",
        "name": "options.certificatePolicy.keyProperties.keySize"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the same key pair will be used on certificate renewal.",
        "name": "options.certificatePolicy.keyProperties.reuseKey"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of\rthe secret backing a certificate.",
        "name": "options.certificatePolicy.secretProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The\rmedia type (MIME type).",
        "name": "options.certificatePolicy.secretProperties.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the X509 component of a certificate.",
        "name": "options.certificatePolicy.x509CertificateProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The subject\rname. Should be a valid X509 distinguished Name.",
        "name": "options.certificatePolicy.x509CertificateProperties.subject"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "The enhanced key usage.",
        "name": "options.certificatePolicy.x509CertificateProperties.ekus"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The subject alternative names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Email addresses.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Domain names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "User principal names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "List of key\rusages.",
        "name": "options.certificatePolicy.x509CertificateProperties.keyUsage"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The\rduration that the ceritifcate is valid in months.",
        "name": "options.certificatePolicy.x509CertificateProperties.validityInMonths"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Actions that will\rbe performed by Key Vault over the lifetime of a certificate.",
        "name": "options.certificatePolicy.lifetimeActions"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Parameters for\rthe issuer of the X509 component of a certificate.",
        "name": "options.certificatePolicy.issuerParameters"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Name of\rthe referenced issuer object or reserved names; for example, 'Self' or\r'Unknown'.",
        "name": "options.certificatePolicy.issuerParameters.name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of certificate to be requested from the issuer provider.",
        "name": "options.certificatePolicy.issuerParameters.certificateType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The certificate\rattributes.",
        "name": "options.certificatePolicy.attributes"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The attributes of the\rcertificate (optional).",
        "name": "options.certificateAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether\rthe object is enabled.",
        "name": "options.certificateAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in\rUTC.",
        "name": "options.certificateAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.certificateAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateOperation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 5445,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 150
  },
  {
    "id": "_importCertificate",
    "longname": "_importCertificate",
    "name": "_importCertificate",
    "kind": "function",
    "scope": "global",
    "description": "Imports a certificate into a specified key vault.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Base64 encoded representation of\rthe certificate object to import. This certificate needs to contain the\rprivate key.",
        "name": "base64EncodedCertificate"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "If the private key in\rbase64EncodedCertificate is encrypted, the password used for encryption.",
        "name": "options.password"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The management policy for the\rcertificate.",
        "name": "options.certificatePolicy"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the\rkey backing a certificate.",
        "name": "options.certificatePolicy.keyProperties"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the private key can be exported.",
        "name": "options.certificatePolicy.keyProperties.exportable"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The key\rtype.",
        "name": "options.certificatePolicy.keyProperties.keyType"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The key\rsize in bytes. For example;  1024 or 2048.",
        "name": "options.certificatePolicy.keyProperties.keySize"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the same key pair will be used on certificate renewal.",
        "name": "options.certificatePolicy.keyProperties.reuseKey"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of\rthe secret backing a certificate.",
        "name": "options.certificatePolicy.secretProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The\rmedia type (MIME type).",
        "name": "options.certificatePolicy.secretProperties.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the X509 component of a certificate.",
        "name": "options.certificatePolicy.x509CertificateProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The subject\rname. Should be a valid X509 distinguished Name.",
        "name": "options.certificatePolicy.x509CertificateProperties.subject"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "The enhanced key usage.",
        "name": "options.certificatePolicy.x509CertificateProperties.ekus"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The subject alternative names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Email addresses.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Domain names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "User principal names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "List of key\rusages.",
        "name": "options.certificatePolicy.x509CertificateProperties.keyUsage"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The\rduration that the ceritifcate is valid in months.",
        "name": "options.certificatePolicy.x509CertificateProperties.validityInMonths"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Actions that will\rbe performed by Key Vault over the lifetime of a certificate.",
        "name": "options.certificatePolicy.lifetimeActions"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Parameters for\rthe issuer of the X509 component of a certificate.",
        "name": "options.certificatePolicy.issuerParameters"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Name of\rthe referenced issuer object or reserved names; for example, 'Self' or\r'Unknown'.",
        "name": "options.certificatePolicy.issuerParameters.name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of certificate to be requested from the issuer provider.",
        "name": "options.certificatePolicy.issuerParameters.certificateType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The certificate\rattributes.",
        "name": "options.certificatePolicy.attributes"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The attributes of the\rcertificate (optional).",
        "name": "options.certificateAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether\rthe object is enabled.",
        "name": "options.certificateAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in\rUTC.",
        "name": "options.certificateAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.certificateAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 5720,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 151
  },
  {
    "id": "_getCertificateVersions",
    "longname": "_getCertificateVersions",
    "name": "_getCertificateVersions",
    "kind": "function",
    "scope": "global",
    "description": "List the versions of a certificate.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 5912,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 152
  },
  {
    "id": "_getCertificatePolicy",
    "longname": "_getCertificatePolicy",
    "name": "_getCertificatePolicy",
    "kind": "function",
    "scope": "global",
    "description": "Lists the policy for a certificate.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate in a given key\rvault.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificatePolicy} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 6073,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 153
  },
  {
    "id": "_updateCertificatePolicy",
    "longname": "_updateCertificatePolicy",
    "name": "_updateCertificatePolicy",
    "kind": "function",
    "scope": "global",
    "description": "Updates the policy for a certificate. Set specified members in the\rcertificate policy. Leave others as null.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate in the given\rvault.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "The policy for the certificate.",
        "name": "certificatePolicy"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the key\rbacking a certificate.",
        "name": "certificatePolicy.keyProperties"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if\rthe private key can be exported.",
        "name": "certificatePolicy.keyProperties.exportable"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The key type.",
        "name": "certificatePolicy.keyProperties.keyType"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The key size in\rbytes. For example;  1024 or 2048.",
        "name": "certificatePolicy.keyProperties.keySize"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the\rsame key pair will be used on certificate renewal.",
        "name": "certificatePolicy.keyProperties.reuseKey"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the\rsecret backing a certificate.",
        "name": "certificatePolicy.secretProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The media\rtype (MIME type).",
        "name": "certificatePolicy.secretProperties.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of\rthe X509 component of a certificate.",
        "name": "certificatePolicy.x509CertificateProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The\rsubject name. Should be a valid X509 distinguished Name.",
        "name": "certificatePolicy.x509CertificateProperties.subject"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "The\renhanced key usage.",
        "name": "certificatePolicy.x509CertificateProperties.ekus"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The\rsubject alternative names.",
        "name": "certificatePolicy.x509CertificateProperties.subjectAlternativeNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Email addresses.",
        "name": "certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Domain names.",
        "name": "certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "User principal names.",
        "name": "certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "List\rof key usages.",
        "name": "certificatePolicy.x509CertificateProperties.keyUsage"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The duration\rthat the ceritifcate is valid in months.",
        "name": "certificatePolicy.x509CertificateProperties.validityInMonths"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Actions that will be\rperformed by Key Vault over the lifetime of a certificate.",
        "name": "certificatePolicy.lifetimeActions"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Parameters for the\rissuer of the X509 component of a certificate.",
        "name": "certificatePolicy.issuerParameters"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Name of the\rreferenced issuer object or reserved names; for example, 'Self' or\r'Unknown'.",
        "name": "certificatePolicy.issuerParameters.name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of\rcertificate to be requested from the issuer provider.",
        "name": "certificatePolicy.issuerParameters.certificateType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The certificate attributes.",
        "name": "certificatePolicy.attributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether\rthe object is enabled.",
        "name": "certificatePolicy.attributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in\rUTC.",
        "name": "certificatePolicy.attributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "certificatePolicy.attributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificatePolicy} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 6295,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 154
  },
  {
    "id": "_updateCertificate",
    "longname": "_updateCertificate",
    "name": "_updateCertificate",
    "kind": "function",
    "scope": "global",
    "description": "Updates the specified attributes associated with the given certificate.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate in the given key\rvault.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the certificate.",
        "name": "certificateVersion"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The management policy for the\rcertificate.",
        "name": "options.certificatePolicy"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the\rkey backing a certificate.",
        "name": "options.certificatePolicy.keyProperties"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the private key can be exported.",
        "name": "options.certificatePolicy.keyProperties.exportable"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The key\rtype.",
        "name": "options.certificatePolicy.keyProperties.keyType"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The key\rsize in bytes. For example;  1024 or 2048.",
        "name": "options.certificatePolicy.keyProperties.keySize"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the same key pair will be used on certificate renewal.",
        "name": "options.certificatePolicy.keyProperties.reuseKey"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of\rthe secret backing a certificate.",
        "name": "options.certificatePolicy.secretProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The\rmedia type (MIME type).",
        "name": "options.certificatePolicy.secretProperties.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the X509 component of a certificate.",
        "name": "options.certificatePolicy.x509CertificateProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The subject\rname. Should be a valid X509 distinguished Name.",
        "name": "options.certificatePolicy.x509CertificateProperties.subject"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "The enhanced key usage.",
        "name": "options.certificatePolicy.x509CertificateProperties.ekus"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The subject alternative names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Email addresses.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Domain names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "User principal names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "List of key\rusages.",
        "name": "options.certificatePolicy.x509CertificateProperties.keyUsage"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The\rduration that the ceritifcate is valid in months.",
        "name": "options.certificatePolicy.x509CertificateProperties.validityInMonths"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Actions that will\rbe performed by Key Vault over the lifetime of a certificate.",
        "name": "options.certificatePolicy.lifetimeActions"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Parameters for\rthe issuer of the X509 component of a certificate.",
        "name": "options.certificatePolicy.issuerParameters"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Name of\rthe referenced issuer object or reserved names; for example, 'Self' or\r'Unknown'.",
        "name": "options.certificatePolicy.issuerParameters.name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of certificate to be requested from the issuer provider.",
        "name": "options.certificatePolicy.issuerParameters.certificateType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The certificate\rattributes.",
        "name": "options.certificatePolicy.attributes"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The attributes of the\rcertificate (optional).",
        "name": "options.certificateAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether\rthe object is enabled.",
        "name": "options.certificateAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in\rUTC.",
        "name": "options.certificateAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.certificateAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 6546,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 155
  },
  {
    "id": "_getCertificate",
    "longname": "_getCertificate",
    "name": "_getCertificate",
    "kind": "function",
    "scope": "global",
    "description": "Gets information about a specified certificate.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate in the given\rvault.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the certificate.",
        "name": "certificateVersion"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 6727,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 156
  },
  {
    "id": "_updateCertificateOperation",
    "longname": "_updateCertificateOperation",
    "name": "_updateCertificateOperation",
    "kind": "function",
    "scope": "global",
    "description": "Updates a certificate operation.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "Indicates if cancellation was\rrequested on the certificate operation.",
        "name": "cancellationRequested"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateOperation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 6877,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 157
  },
  {
    "id": "_getCertificateOperation",
    "longname": "_getCertificateOperation",
    "name": "_getCertificateOperation",
    "kind": "function",
    "scope": "global",
    "description": "Gets the operation associated with a specified certificate.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateOperation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 7042,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 158
  },
  {
    "id": "_deleteCertificateOperation",
    "longname": "_deleteCertificateOperation",
    "name": "_deleteCertificateOperation",
    "kind": "function",
    "scope": "global",
    "description": "Deletes the operation for a specified certificate.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateOperation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 7185,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 159
  },
  {
    "id": "_mergeCertificate",
    "longname": "_mergeCertificate",
    "name": "_mergeCertificate",
    "kind": "function",
    "scope": "global",
    "description": "Merges a certificate or a certificate chain with a key pair existing on the\rserver.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "description": "The certificate or the certificate chain to\rmerge.",
        "name": "x509Certificates"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The attributes of the\rcertificate (optional).",
        "name": "options.certificateAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether\rthe object is enabled.",
        "name": "options.certificateAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in\rUTC.",
        "name": "options.certificateAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.certificateAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 7346,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 160
  },
  {
    "id": "_getKeyVersionsNext",
    "longname": "_getKeyVersionsNext",
    "name": "_getKeyVersionsNext",
    "kind": "function",
    "scope": "global",
    "description": "Retrieves a list of individual key versions with the same key name. The full\rkey identifier, attributes, and tags are provided in the response.\rAuthorization: Requires the keys/list permission.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 7527,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 161
  },
  {
    "id": "_getKeysNext",
    "longname": "_getKeysNext",
    "name": "_getKeysNext",
    "kind": "function",
    "scope": "global",
    "description": "List keys in the specified vault.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 7655,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 162
  },
  {
    "id": "_getSecretsNext",
    "longname": "_getSecretsNext",
    "name": "_getSecretsNext",
    "kind": "function",
    "scope": "global",
    "description": "List secrets in a specified key vault",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 7783,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 163
  },
  {
    "id": "_getSecretVersionsNext",
    "longname": "_getSecretVersionsNext",
    "name": "_getSecretVersionsNext",
    "kind": "function",
    "scope": "global",
    "description": "List the versions of the specified secret.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 7911,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 164
  },
  {
    "id": "_getCertificatesNext",
    "longname": "_getCertificatesNext",
    "name": "_getCertificatesNext",
    "kind": "function",
    "scope": "global",
    "description": "List certificates in a specified key vault",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 8039,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 165
  },
  {
    "id": "_getCertificateIssuersNext",
    "longname": "_getCertificateIssuersNext",
    "name": "_getCertificateIssuersNext",
    "kind": "function",
    "scope": "global",
    "description": "List certificate issuers for a specified key vault.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateIssuerListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 8168,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 166
  },
  {
    "id": "_getCertificateVersionsNext",
    "longname": "_getCertificateVersionsNext",
    "name": "_getCertificateVersionsNext",
    "kind": "function",
    "scope": "global",
    "description": "List the versions of a certificate.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "The callback.",
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 8296,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 167
  },
  {
    "id": "createKeyIdentifier",
    "longname": "createKeyIdentifier",
    "name": "createKeyIdentifier",
    "kind": "function",
    "scope": "global",
    "description": "Creates an ObjectIdentifier object for a key.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault URI.",
        "name": "vault"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The key name.",
        "name": "name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": null,
        "description": "The object version.",
        "name": "version"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ObjectIdentifier"
          ]
        },
        "description": "An object that represents the key identifier."
      }
    ],
    "meta": {
      "lineno": 112,
      "filename": "objectIdentifier.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 389
  },
  {
    "id": "parseKeyIdentifier",
    "longname": "parseKeyIdentifier",
    "name": "parseKeyIdentifier",
    "kind": "function",
    "scope": "global",
    "description": "Parses a string containing a key identifier and returns the ObjectIdentifier object.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The key identifier (an URI).",
        "name": "identifier"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ObjectIdentifier"
          ]
        },
        "description": "An object that represents the key identifier."
      }
    ],
    "meta": {
      "lineno": 120,
      "filename": "objectIdentifier.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 390
  },
  {
    "id": "createSecretIdentifier",
    "longname": "createSecretIdentifier",
    "name": "createSecretIdentifier",
    "kind": "function",
    "scope": "global",
    "description": "Creates an ObjectIdentifier object for a secret.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault URI.",
        "name": "vault"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The secret name.",
        "name": "name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": null,
        "description": "The object version.",
        "name": "version"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ObjectIdentifier"
          ]
        },
        "description": "An object that represents the secret identifier."
      }
    ],
    "meta": {
      "lineno": 130,
      "filename": "objectIdentifier.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 391
  },
  {
    "id": "parseSecretIdentifier",
    "longname": "parseSecretIdentifier",
    "name": "parseSecretIdentifier",
    "kind": "function",
    "scope": "global",
    "description": "Parses a string containing a secret identifier and returns the ObjectIdentifier object.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The secret identifier (an URI).",
        "name": "identifier"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ObjectIdentifier"
          ]
        },
        "description": "An object that represents the secret identifier."
      }
    ],
    "meta": {
      "lineno": 138,
      "filename": "objectIdentifier.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 392
  },
  {
    "id": "createCertificateIdentifier",
    "longname": "createCertificateIdentifier",
    "name": "createCertificateIdentifier",
    "kind": "function",
    "scope": "global",
    "description": "Creates an ObjectIdentifier object for a certificate.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault URI.",
        "name": "vault"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The certificate name.",
        "name": "name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": null,
        "description": "The object version.",
        "name": "version"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ObjectIdentifier"
          ]
        },
        "description": "An object that represents the certificate identifier."
      }
    ],
    "meta": {
      "lineno": 148,
      "filename": "objectIdentifier.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 393
  },
  {
    "id": "parseCertificateIdentifier",
    "longname": "parseCertificateIdentifier",
    "name": "parseCertificateIdentifier",
    "kind": "function",
    "scope": "global",
    "description": "Parses a string containing a certificate identifier and returns the ObjectIdentifier object.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The certificate identifier (an URI).",
        "name": "identifier"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ObjectIdentifier"
          ]
        },
        "description": "An object that represents the certificate identifier."
      }
    ],
    "meta": {
      "lineno": 156,
      "filename": "objectIdentifier.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 394
  },
  {
    "id": "createCertificateOperationIdentifier",
    "longname": "createCertificateOperationIdentifier",
    "name": "createCertificateOperationIdentifier",
    "kind": "function",
    "scope": "global",
    "description": "Creates an ObjectIdentifier object for a certificate operation.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault URI.",
        "name": "vault"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The certificate name.",
        "name": "name"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ObjectIdentifier"
          ]
        },
        "description": "An object that represents the certificate identifier."
      }
    ],
    "meta": {
      "lineno": 165,
      "filename": "objectIdentifier.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 395
  },
  {
    "id": "parseCertificateOperationIdentifier",
    "longname": "parseCertificateOperationIdentifier",
    "name": "parseCertificateOperationIdentifier",
    "kind": "function",
    "scope": "global",
    "description": "Parses a string containing a certificate identifier and returns the ObjectIdentifier object.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The certificate identifier (an URI).",
        "name": "identifier"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ObjectIdentifier"
          ]
        },
        "description": "An object that represents the certificate identifier."
      }
    ],
    "meta": {
      "lineno": 176,
      "filename": "objectIdentifier.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 396
  },
  {
    "id": "createIssuerIdentifier",
    "longname": "createIssuerIdentifier",
    "name": "createIssuerIdentifier",
    "kind": "function",
    "scope": "global",
    "description": "Creates an ObjectIdentifier object for a certificate issuer.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault URI.",
        "name": "vault"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The certificate issuer name.",
        "name": "name"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ObjectIdentifier"
          ]
        },
        "description": "An object that represents the certificate issuer identifier."
      }
    ],
    "meta": {
      "lineno": 188,
      "filename": "objectIdentifier.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 397
  },
  {
    "id": "parseIssuerIdentifier",
    "longname": "parseIssuerIdentifier",
    "name": "parseIssuerIdentifier",
    "kind": "function",
    "scope": "global",
    "description": "Parses a string containing a certificate issuer identifier and returns the ObjectIdentifier object.",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The certificate issuer identifier (an URI).",
        "name": "identifier"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ObjectIdentifier"
          ]
        },
        "description": "An object that represents the certificate issuer identifier."
      }
    ],
    "meta": {
      "lineno": 196,
      "filename": "objectIdentifier.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 398
  },
  {
    "id": "ObjectIdentifier#vault",
    "longname": "ObjectIdentifier#vault",
    "name": "vault",
    "kind": "member",
    "scope": "instance",
    "description": "The vault URI.",
    "memberof": "ObjectIdentifier",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 13,
      "filename": "objectIdentifier.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 384
  },
  {
    "id": "ObjectIdentifier#name",
    "longname": "ObjectIdentifier#name",
    "name": "name",
    "kind": "member",
    "scope": "instance",
    "description": "The key name.",
    "memberof": "ObjectIdentifier",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 18,
      "filename": "objectIdentifier.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 385
  },
  {
    "id": "ObjectIdentifier#version",
    "longname": "ObjectIdentifier#version",
    "name": "version",
    "kind": "member",
    "scope": "instance",
    "description": "The key version. May be null.",
    "memberof": "ObjectIdentifier",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 23,
      "filename": "objectIdentifier.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 386
  },
  {
    "id": "ObjectIdentifier#baseIdentifier",
    "longname": "ObjectIdentifier#baseIdentifier",
    "name": "baseIdentifier",
    "kind": "member",
    "scope": "instance",
    "description": "The base identifier (i.e. without the version).",
    "memberof": "ObjectIdentifier",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 28,
      "filename": "objectIdentifier.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 387
  },
  {
    "id": "ObjectIdentifier#identifier",
    "longname": "ObjectIdentifier#identifier",
    "name": "identifier",
    "kind": "member",
    "scope": "instance",
    "description": "The full identifier if a version was informed; otherwise is the same value of baseIdentifier.",
    "memberof": "ObjectIdentifier",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 33,
      "filename": "objectIdentifier.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 388
  },
  {
    "id": "KeyVaultClient#createKeyWithHttpOperationResponse",
    "longname": "KeyVaultClient#createKeyWithHttpOperationResponse",
    "name": "createKeyWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Creates a new key, stores it, then returns key parameters and attributes to\rthe client. The create key operation can be used to create any key type in\rAzure Key Vault. If the named key already exists, Azure Key Vault creates a\rnew version of the key. Authorization: Requires the keys/create permission.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name for the new key. The system will generate\rthe version name for the new key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The type of key to create. For valid key types, see\rJsonWebKeyType. Supported JsonWebKey key types (kty) for Elliptic Curve,\rRSA, HSM, Octet. Possible values include: 'EC', 'RSA', 'RSA-HSM', 'oct'",
        "name": "keyType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The key size in bytes. For example, 1024\ror 2048.",
        "name": "options.keySize"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "name": "options.keyOps"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "name": "options.keyAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the\robject is enabled.",
        "name": "options.keyAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in UTC.",
        "name": "options.keyAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.keyAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 246,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 18
  },
  {
    "id": "KeyVaultClient#createKey",
    "longname": "KeyVaultClient#createKey",
    "name": "createKey",
    "kind": "function",
    "scope": "instance",
    "description": "Creates a new, named, key in the specified vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, e.g.\rhttps://myvault.vault.azure.net",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The type of key to create. Valid key types, see\rJsonWebKeyType. Possible values include: 'EC', 'RSA', 'RSA-HSM', 'oct'",
        "name": "keyType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The key size in bytes. e.g. 1024 or 2048.",
        "name": "options.keySize"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "name": "options.keyOps"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "name": "options.keyAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the\robject is enabled",
        "name": "options.keyAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in UTC",
        "name": "options.keyAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC",
        "name": "options.keyAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application-specific metadata in the form of\rkey-value pairs",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 304,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 19
  },
  {
    "id": "KeyVaultClient#importKeyWithHttpOperationResponse",
    "longname": "KeyVaultClient#importKeyWithHttpOperationResponse",
    "name": "importKeyWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Imports an externally created key, stores it, and returns key parameters and\rattributes to the client. The import key operation may be used to import any\rkey type into an Azure Key Vault. If the named key already exists, Azure Key\rVault creates a new version of the key. Authorization: requires the\rkeys/import permission.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Name for the imported key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "The Json web key",
        "name": "key"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Key identifier.",
        "name": "key.kid"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Supported JsonWebKey key types (kty) for Elliptic\rCurve, RSA, HSM, Octet. Kty is usually set to RSA. Possible values include:\r'EC', 'RSA', 'RSA-HSM', 'oct'",
        "name": "key.kty"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "name": "key.keyOps"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA modulus.",
        "name": "key.n"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA public exponent.",
        "name": "key.e"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA private exponent.",
        "name": "key.d"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA private key parameter.",
        "name": "key.dp"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA private key parameter.",
        "name": "key.dq"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA private key parameter.",
        "name": "key.qi"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA secret prime.",
        "name": "key.p"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA secret prime, with p < q.",
        "name": "key.q"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "Symmetric key.",
        "name": "key.k"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "HSM Token, used with 'Bring Your Own Key'.",
        "name": "key.t"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Whether to import as a hardware key (HSM) or\rsoftware key.",
        "name": "options.hsm"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The key management attributes.",
        "name": "options.keyAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the\robject is enabled.",
        "name": "options.keyAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in UTC.",
        "name": "options.keyAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.keyAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 376,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 20
  },
  {
    "id": "KeyVaultClient#importKey",
    "longname": "KeyVaultClient#importKey",
    "name": "importKey",
    "kind": "function",
    "scope": "instance",
    "description": "Imports a key into the specified vault",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, e.g.\rhttps://myvault.vault.azure.net",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "The Json web key",
        "name": "key"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Key Identifier",
        "name": "key.kid"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Key type, usually RSA. Possible values include:\r'EC', 'RSA', 'RSA-HSM', 'oct'",
        "name": "key.kty"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "name": "key.keyOps"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA modulus",
        "name": "key.n"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA public exponent",
        "name": "key.e"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA private exponent",
        "name": "key.d"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA Private Key Parameter",
        "name": "key.dp"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA Private Key Parameter",
        "name": "key.dq"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA Private Key Parameter",
        "name": "key.qi"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA secret prime",
        "name": "key.p"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA secret prime, with p < q",
        "name": "key.q"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "Symmetric key",
        "name": "key.k"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "HSM Token, used with Bring Your Own Key",
        "name": "key.t"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Whether to import as a hardware key (HSM) or\rsoftware key",
        "name": "options.hsm"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The key management attributes",
        "name": "options.keyAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the\robject is enabled",
        "name": "options.keyAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in UTC",
        "name": "options.keyAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC",
        "name": "options.keyAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application-specific metadata in the form of\rkey-value pairs",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 459,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 21
  },
  {
    "id": "KeyVaultClient#deleteKeyWithHttpOperationResponse",
    "longname": "KeyVaultClient#deleteKeyWithHttpOperationResponse",
    "name": "deleteKeyWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes a key of any type from storage in Azure Key Vault. The delete key\roperation cannot be used to remove individual versions of a key. This\roperation removes the cryptographic material associated with the key, which\rmeans the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt\roperations. Authorization: Requires the keys/delete permission.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key to delete.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 486,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 22
  },
  {
    "id": "KeyVaultClient#deleteKey",
    "longname": "KeyVaultClient#deleteKey",
    "name": "deleteKey",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes a key of any type from storage in Azure Key Vault. The delete key\roperation cannot be used to remove individual versions of a key. This\roperation removes the cryptographic material associated with the key, which\rmeans the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt\roperations. Authorization: Requires the keys/delete permission.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key to delete.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 529,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 23
  },
  {
    "id": "KeyVaultClient#updateKeyWithHttpOperationResponse",
    "longname": "KeyVaultClient#updateKeyWithHttpOperationResponse",
    "name": "updateKeyWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "The update key operation changes specified attributes of a stored key and\rcan be applied to any key type and key version stored in Azure Key Vault.\rThe cryptographic material of a key itself cannot be changed. In order to\rperform this operation, the key must already exist in the Key Vault.\rAuthorization: requires the keys/update permission.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The key identifier. It may or may not contain a version path. If a version is not provided, the latest key version is used.",
        "name": "keyIdentifier"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Json web key operations. For more\rinformation on possible key operations, see JsonWebKeyOperation.",
        "name": "options.keyOps"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "name": "options.keyAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the\robject is enabled.",
        "name": "options.keyAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in UTC.",
        "name": "options.keyAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.keyAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 568,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 24
  },
  {
    "id": "KeyVaultClient#updateKey",
    "longname": "KeyVaultClient#updateKey",
    "name": "updateKey",
    "kind": "function",
    "scope": "instance",
    "description": "The update key operation changes specified attributes of a stored key and\rcan be applied to any key type and key version stored in Azure Key Vault.\rThe cryptographic material of a key itself cannot be changed. In order to\rperform this operation, the key must already exist in the Key Vault.\rAuthorization: requires the keys/update permission.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The key identifier. It may or may not contain a version path. \rIf a version is not provided, the latest key version is used.",
        "name": "keyIdentifier"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Json web key operations. For more\rinformation on possible key operations, see JsonWebKeyOperation.",
        "name": "options.keyOps"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "name": "options.keyAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the\robject is enabled",
        "name": "options.keyAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in UTC",
        "name": "options.keyAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC",
        "name": "options.keyAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application-specific metadata in the form of\rkey-value pairs",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 626,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 25
  },
  {
    "id": "KeyVaultClient#getKeyWithHttpOperationResponse",
    "longname": "KeyVaultClient#getKeyWithHttpOperationResponse",
    "name": "getKeyWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Gets the public part of a stored key. The get key operation is applicable to\rall key types. If the requested key is symmetric, then no key material is\rreleased in the response. Authorization: Requires the keys/get permission.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The key identifier. It may or may not contain a version path. \rIf a version is not provided, the latest key version is used.",
        "name": "keyIdentifier"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 651,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 26
  },
  {
    "id": "KeyVaultClient#getKey",
    "longname": "KeyVaultClient#getKey",
    "name": "getKey",
    "kind": "function",
    "scope": "instance",
    "description": "Gets the public part of a stored key. The get key operation is applicable to\rall key types. If the requested key is symmetric, then no key material is\rreleased in the response. Authorization: Requires the keys/get permission.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The key identifier. It may or may not contain a version path. \rIf a version is not provided, the latest key version is used.",
        "name": "keyIdentifier"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 692,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 27
  },
  {
    "id": "KeyVaultClient#getKeyVersionsWithHttpOperationResponse",
    "longname": "KeyVaultClient#getKeyVersionsWithHttpOperationResponse",
    "name": "getKeyVersionsWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Retrieves a list of individual key versions with the same key name. The full\rkey identifier, attributes, and tags are provided in the response.\rAuthorization: Requires the keys/list permission.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 722,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 28
  },
  {
    "id": "KeyVaultClient#getKeyVersions",
    "longname": "KeyVaultClient#getKeyVersions",
    "name": "getKeyVersions",
    "kind": "function",
    "scope": "instance",
    "description": "List the versions of the specified key",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, e.g.\rhttps://myvault.vault.azure.net",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 764,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 29
  },
  {
    "id": "KeyVaultClient#getKeysWithHttpOperationResponse",
    "longname": "KeyVaultClient#getKeysWithHttpOperationResponse",
    "name": "getKeysWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "List keys in the specified vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 788,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 30
  },
  {
    "id": "KeyVaultClient#getKeys",
    "longname": "KeyVaultClient#getKeys",
    "name": "getKeys",
    "kind": "function",
    "scope": "instance",
    "description": "List keys in the specified vault",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, e.g.\rhttps://myvault.vault.azure.net",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 828,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 31
  },
  {
    "id": "KeyVaultClient#backupKeyWithHttpOperationResponse",
    "longname": "KeyVaultClient#backupKeyWithHttpOperationResponse",
    "name": "backupKeyWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Requests that a backup of the specified key be downloaded to the client.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<BackupKeyResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 851,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 32
  },
  {
    "id": "KeyVaultClient#backupKey",
    "longname": "KeyVaultClient#backupKey",
    "name": "backupKey",
    "kind": "function",
    "scope": "instance",
    "description": "Requests that a backup of the specified key be downloaded to the client.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{BackupKeyResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link BackupKeyResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 890,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 33
  },
  {
    "id": "KeyVaultClient#restoreKeyWithHttpOperationResponse",
    "longname": "KeyVaultClient#restoreKeyWithHttpOperationResponse",
    "name": "restoreKeyWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Restores a backed up key to a vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "description": "The backup blob associated with a key\rbundle.",
        "name": "keyBundleBackup"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 914,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 34
  },
  {
    "id": "KeyVaultClient#restoreKey",
    "longname": "KeyVaultClient#restoreKey",
    "name": "restoreKey",
    "kind": "function",
    "scope": "instance",
    "description": "Restores a backed up key to a vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "description": "The backup blob associated with a key\rbundle.",
        "name": "keyBundleBackup"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 954,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 35
  },
  {
    "id": "KeyVaultClient#encryptWithHttpOperationResponse",
    "longname": "KeyVaultClient#encryptWithHttpOperationResponse",
    "name": "encryptWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Encrypts an arbitrary sequence of bytes using an encryption key that is\rstored in a key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The key identifier. It may or may not contain a version path. \rIf a version is not provided, the latest key version is used.",
        "name": "keyIdentifier"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyOperationResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 981,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 36
  },
  {
    "id": "KeyVaultClient#encrypt",
    "longname": "KeyVaultClient#encrypt",
    "name": "encrypt",
    "kind": "function",
    "scope": "instance",
    "description": "Encrypts an arbitrary sequence of bytes using an encryption key that is\rstored in Azure Key Vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The key identifier. It may or may not contain a version path. If a version is not provided, the latest key version is used.",
        "name": "keyIdentifier"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyOperationResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyOperationResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 1025,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 37
  },
  {
    "id": "KeyVaultClient#decryptWithHttpOperationResponse",
    "longname": "KeyVaultClient#decryptWithHttpOperationResponse",
    "name": "decryptWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Decrypts a single block of encrypted data.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The key identifier. It may or may not contain a version path. \rIf a version is not provided, the latest key version is used.",
        "name": "keyIdentifier"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyOperationResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 1053,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 38
  },
  {
    "id": "KeyVaultClient#decrypt",
    "longname": "KeyVaultClient#decrypt",
    "name": "decrypt",
    "kind": "function",
    "scope": "instance",
    "description": "Decrypts a single block of encrypted data",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The key identifier. It may or may not contain a version path. \rIf a version is not provided, the latest key version is used.",
        "name": "keyIdentifier"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyOperationResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyOperationResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 1097,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 39
  },
  {
    "id": "KeyVaultClient#signWithHttpOperationResponse",
    "longname": "KeyVaultClient#signWithHttpOperationResponse",
    "name": "signWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Creates a signature from a digest using the specified key.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The key identifier. It may or may not contain a version path. \rIf a version is not provided, the latest key version is used.",
        "name": "keyIdentifier"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The signing/verification algorithm identifier. For\rmore information on possible algorithm types, see\rJsonWebKeySignatureAlgorithm. Possible values include: 'RS256', 'RS384',\r'RS512', 'RSNULL'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyOperationResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 1127,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 40
  },
  {
    "id": "KeyVaultClient#sign",
    "longname": "KeyVaultClient#sign",
    "name": "sign",
    "kind": "function",
    "scope": "instance",
    "description": "Creates a signature from a digest using the specified key in the vault",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The key identifier. It may or may not contain a version path. \rIf a version is not provided, the latest key version is used.",
        "name": "keyIdentifier"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The signing/verification algorithm identifier.\rFor more information on possible algorithm types, see\rJsonWebKeySignatureAlgorithm. Possible values include: 'RS256', 'RS384',\r'RS512', 'RSNULL'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link KeyOperationResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 1164,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 41
  },
  {
    "id": "KeyVaultClient#verifyWithHttpOperationResponse",
    "longname": "KeyVaultClient#verifyWithHttpOperationResponse",
    "name": "verifyWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Verifies a signature using a specified key.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The key identifier. It may or may not contain a version path.\rIf a version is not provided, the latest key version is used.",
        "name": "keyIdentifier"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The signing/verification algorithm. For more\rinformation on possible algorithm types, see JsonWebKeySignatureAlgorithm.\rPossible values include: 'RS256', 'RS384', 'RS512', 'RSNULL'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "description": "The digest used for signing.",
        "name": "digest"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "description": "The signature to be verified.",
        "name": "signature"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyVerifyResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 1195,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 42
  },
  {
    "id": "KeyVaultClient#verify",
    "longname": "KeyVaultClient#verify",
    "name": "verify",
    "kind": "function",
    "scope": "instance",
    "description": "Verifies a signature using the specified key",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The key identifier. It may or may not contain a version path.\rIf a version is not provided, the latest key version is used.",
        "name": "keyIdentifier"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The signing/verification algorithm. For more\rinformation on possible algorithm types, see JsonWebKeySignatureAlgorithm.\rPossible values include: 'RS256', 'RS384', 'RS512', 'RSNULL'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "description": "The digest used for signing",
        "name": "digest"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "description": "The signature to be verified",
        "name": "signature"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link KeyVerifyResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 1233,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 43
  },
  {
    "id": "KeyVaultClient#wrapKeyWithHttpOperationResponse",
    "longname": "KeyVaultClient#wrapKeyWithHttpOperationResponse",
    "name": "wrapKeyWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Wraps a symmetric key using a specified key.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The key identifier. It may or may not contain a version path.\rIf a version is not provided, the latest key version is used.",
        "name": "keyIdentifier"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyOperationResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 1261,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 44
  },
  {
    "id": "KeyVaultClient#wrapKey",
    "longname": "KeyVaultClient#wrapKey",
    "name": "wrapKey",
    "kind": "function",
    "scope": "instance",
    "description": "Wraps a symmetric key using the specified key",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The key identifier. It may or may not contain a version path.\rIf a version is not provided, the latest key version is used.",
        "name": "keyIdentifier"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link KeyOperationResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 1296,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 45
  },
  {
    "id": "KeyVaultClient#unwrapKeyWithHttpOperationResponse",
    "longname": "KeyVaultClient#unwrapKeyWithHttpOperationResponse",
    "name": "unwrapKeyWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Unwraps a symmetric key using the specified key that was initially used for\rwrapping that key.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The key identifier. It may or may not contain a version path. \rIf a version is not provided, the latest key version is used.",
        "name": "keyIdentifier"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyOperationResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 1325,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 46
  },
  {
    "id": "KeyVaultClient#unwrapKey",
    "longname": "KeyVaultClient#unwrapKey",
    "name": "unwrapKey",
    "kind": "function",
    "scope": "instance",
    "description": "Unwraps a symmetric key using the specified key in the vault that has\rinitially been used for wrapping the key.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The key identifier. It may or may not contain a version path. \rIf a version is not provided, the latest key version is used.",
        "name": "keyIdentifier"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link KeyOperationResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 1361,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 47
  },
  {
    "id": "KeyVaultClient#setSecretWithHttpOperationResponse",
    "longname": "KeyVaultClient#setSecretWithHttpOperationResponse",
    "name": "setSecretWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Sets a secret in a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the secret.",
        "name": "secretName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The value of the secret.",
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of the secret value such as a\rpassword.",
        "name": "options.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The secret management attributes.",
        "name": "options.secretAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the\robject is enabled.",
        "name": "options.secretAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in UTC.",
        "name": "options.secretAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.secretAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<SecretBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 1403,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 48
  },
  {
    "id": "KeyVaultClient#setSecret",
    "longname": "KeyVaultClient#setSecret",
    "name": "setSecret",
    "kind": "function",
    "scope": "instance",
    "description": "Sets a secret in a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the secret.",
        "name": "secretName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The value of the secret.",
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of the secret value such as a\rpassword.",
        "name": "options.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The secret management attributes.",
        "name": "options.secretAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the\robject is enabled.",
        "name": "options.secretAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in UTC.",
        "name": "options.secretAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.secretAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{SecretBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 1459,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 49
  },
  {
    "id": "KeyVaultClient#deleteSecretWithHttpOperationResponse",
    "longname": "KeyVaultClient#deleteSecretWithHttpOperationResponse",
    "name": "deleteSecretWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes a secret from a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the secret.",
        "name": "secretName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<SecretBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 1482,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 50
  },
  {
    "id": "KeyVaultClient#deleteSecret",
    "longname": "KeyVaultClient#deleteSecret",
    "name": "deleteSecret",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes a secret from a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the secret.",
        "name": "secretName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{SecretBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 1521,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 51
  },
  {
    "id": "KeyVaultClient#updateSecretWithHttpOperationResponse",
    "longname": "KeyVaultClient#updateSecretWithHttpOperationResponse",
    "name": "updateSecretWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Updates the attributes associated with a specified secret in a given key\rvault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The secret identifier. It may or may not contain a version path. \rIf a version is not provided, the latest secret version is used.",
        "name": "secretIdentifier"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of the secret value such as a\rpassword.",
        "name": "options.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The secret management attributes.",
        "name": "options.secretAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the\robject is enabled.",
        "name": "options.secretAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in UTC.",
        "name": "options.secretAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.secretAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<SecretBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 1558,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 52
  },
  {
    "id": "KeyVaultClient#updateSecret",
    "longname": "KeyVaultClient#updateSecret",
    "name": "updateSecret",
    "kind": "function",
    "scope": "instance",
    "description": "Updates the attributes associated with a specified secret in a given key\rvault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The secret identifier. It may or may not contain a version path. \rIf a version is not provided, the latest secret version is used.",
        "name": "secretIdentifier"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of the secret value such as a\rpassword",
        "name": "options.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The secret management attributes",
        "name": "options.secretAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the\robject is enabled",
        "name": "options.secretAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in UTC",
        "name": "options.secretAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC",
        "name": "options.secretAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application-specific metadata in the form of\rkey-value pairs",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{SecretBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 1613,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 53
  },
  {
    "id": "KeyVaultClient#getSecretWithHttpOperationResponse",
    "longname": "KeyVaultClient#getSecretWithHttpOperationResponse",
    "name": "getSecretWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Get a specified secret from a given key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The secret identifier. It may or may not contain a version path. \rIf a version is not provided, the latest secret version is used.",
        "name": "secretIdentifier"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<SecretBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 1636,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 54
  },
  {
    "id": "KeyVaultClient#getSecret",
    "longname": "KeyVaultClient#getSecret",
    "name": "getSecret",
    "kind": "function",
    "scope": "instance",
    "description": "Get a specified secret from a given key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The secret identifier. It may or may not contain a version path. \rIf a version is not provided, the latest secret version is used.",
        "name": "secretIdentifier"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link SecretBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 1666,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 55
  },
  {
    "id": "KeyVaultClient#getSecretsWithHttpOperationResponse",
    "longname": "KeyVaultClient#getSecretsWithHttpOperationResponse",
    "name": "getSecretsWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "List secrets in a specified key vault",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<SecretListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 1692,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 56
  },
  {
    "id": "KeyVaultClient#getSecrets",
    "longname": "KeyVaultClient#getSecrets",
    "name": "getSecrets",
    "kind": "function",
    "scope": "instance",
    "description": "List secrets in the specified vault",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, e.g.\rhttps://myvault.vault.azure.net",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{SecretListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 1732,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 57
  },
  {
    "id": "KeyVaultClient#getSecretVersionsWithHttpOperationResponse",
    "longname": "KeyVaultClient#getSecretVersionsWithHttpOperationResponse",
    "name": "getSecretVersionsWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "List the versions of the specified secret.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the secret.",
        "name": "secretName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<SecretListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 1758,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 58
  },
  {
    "id": "KeyVaultClient#getSecretVersions",
    "longname": "KeyVaultClient#getSecretVersions",
    "name": "getSecretVersions",
    "kind": "function",
    "scope": "instance",
    "description": "List the versions of the specified secret",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, e.g.\rhttps://myvault.vault.azure.net",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the secret in the given vault",
        "name": "secretName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{SecretListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 1800,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 59
  },
  {
    "id": "KeyVaultClient#getCertificatesWithHttpOperationResponse",
    "longname": "KeyVaultClient#getCertificatesWithHttpOperationResponse",
    "name": "getCertificatesWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "List certificates in a specified key vault",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 1824,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 60
  },
  {
    "id": "KeyVaultClient#getCertificates",
    "longname": "KeyVaultClient#getCertificates",
    "name": "getCertificates",
    "kind": "function",
    "scope": "instance",
    "description": "List certificates in a specified key vault",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 1864,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 61
  },
  {
    "id": "KeyVaultClient#deleteCertificateWithHttpOperationResponse",
    "longname": "KeyVaultClient#deleteCertificateWithHttpOperationResponse",
    "name": "deleteCertificateWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes a certificate from a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 1887,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 62
  },
  {
    "id": "KeyVaultClient#deleteCertificate",
    "longname": "KeyVaultClient#deleteCertificate",
    "name": "deleteCertificate",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes a certificate from a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 1926,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 63
  },
  {
    "id": "KeyVaultClient#setCertificateContactsWithHttpOperationResponse",
    "longname": "KeyVaultClient#setCertificateContactsWithHttpOperationResponse",
    "name": "setCertificateContactsWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Sets the certificate contacts for the specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "The contacts for the key vault certificate.",
        "name": "contacts"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "The contact list for the vault\rcertificates.",
        "name": "contacts.contactList"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<Contacts>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error|ServiceError} - The error object."
      }
    ],
    "meta": {
      "lineno": 1952,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 64
  },
  {
    "id": "KeyVaultClient#setCertificateContacts",
    "longname": "KeyVaultClient#setCertificateContacts",
    "name": "setCertificateContacts",
    "kind": "function",
    "scope": "instance",
    "description": "Sets the certificate contacts for the specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "The contacts for the key vault certificate.",
        "name": "contacts"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "The contact list for the vault\rcertificates.",
        "name": "contacts.contactList"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{Contacts} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Contacts} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 1994,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 65
  },
  {
    "id": "KeyVaultClient#getCertificateContactsWithHttpOperationResponse",
    "longname": "KeyVaultClient#getCertificateContactsWithHttpOperationResponse",
    "name": "getCertificateContactsWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Lists the certificate contacts for a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<Contacts>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 2015,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 66
  },
  {
    "id": "KeyVaultClient#getCertificateContacts",
    "longname": "KeyVaultClient#getCertificateContacts",
    "name": "getCertificateContacts",
    "kind": "function",
    "scope": "instance",
    "description": "Lists the certificate contacts for a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{Contacts} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Contacts} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 2052,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 67
  },
  {
    "id": "KeyVaultClient#deleteCertificateContactsWithHttpOperationResponse",
    "longname": "KeyVaultClient#deleteCertificateContactsWithHttpOperationResponse",
    "name": "deleteCertificateContactsWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes the certificate contacts for a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<Contacts>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 2073,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 68
  },
  {
    "id": "KeyVaultClient#deleteCertificateContacts",
    "longname": "KeyVaultClient#deleteCertificateContacts",
    "name": "deleteCertificateContacts",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes the certificate contacts for a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{Contacts} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Contacts} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 2110,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 69
  },
  {
    "id": "KeyVaultClient#getCertificateIssuersWithHttpOperationResponse",
    "longname": "KeyVaultClient#getCertificateIssuersWithHttpOperationResponse",
    "name": "getCertificateIssuersWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "List certificate issuers for a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateIssuerListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 2134,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 70
  },
  {
    "id": "KeyVaultClient#getCertificateIssuers",
    "longname": "KeyVaultClient#getCertificateIssuers",
    "name": "getCertificateIssuers",
    "kind": "function",
    "scope": "instance",
    "description": "List certificate issuers for a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateIssuerListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateIssuerListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 2175,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 71
  },
  {
    "id": "KeyVaultClient#setCertificateIssuerWithHttpOperationResponse",
    "longname": "KeyVaultClient#setCertificateIssuerWithHttpOperationResponse",
    "name": "setCertificateIssuerWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Sets the specified certificate issuer.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the issuer.",
        "name": "issuerName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The issuer provider.",
        "name": "provider"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The credentials to be used for the\rissuer.",
        "name": "options.credentials"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The user name/account\rname/account id.",
        "name": "options.credentials.accountId"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The password/secret/account\rkey.",
        "name": "options.credentials.password"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Details of the organization as\rprovided to the issuer.",
        "name": "options.organizationDetails"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Id of the organization.",
        "name": "options.organizationDetails.id"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Details of the\rorganization administrator.",
        "name": "options.organizationDetails.adminDetails"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Attributes of the issuer object.",
        "name": "options.attributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the issuer\ris enabled.",
        "name": "options.attributes.enabled"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<IssuerBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 2222,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 72
  },
  {
    "id": "KeyVaultClient#setCertificateIssuer",
    "longname": "KeyVaultClient#setCertificateIssuer",
    "name": "setCertificateIssuer",
    "kind": "function",
    "scope": "instance",
    "description": "Sets the specified certificate issuer.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the issuer.",
        "name": "issuerName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The issuer provider.",
        "name": "provider"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The credentials to be used for the\rissuer.",
        "name": "options.credentials"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The user name/account\rname/account id.",
        "name": "options.credentials.accountId"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The password/secret/account\rkey.",
        "name": "options.credentials.password"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Details of the organization as\rprovided to the issuer.",
        "name": "options.organizationDetails"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Id of the organization.",
        "name": "options.organizationDetails.id"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Details of the\rorganization administrator.",
        "name": "options.organizationDetails.adminDetails"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Attributes of the issuer object.",
        "name": "options.attributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the issuer\ris enabled.",
        "name": "options.attributes.enabled"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{IssuerBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link IssuerBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 2285,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 73
  },
  {
    "id": "KeyVaultClient#updateCertificateIssuerWithHttpOperationResponse",
    "longname": "KeyVaultClient#updateCertificateIssuerWithHttpOperationResponse",
    "name": "updateCertificateIssuerWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Updates the specified certificate issuer.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the issuer.",
        "name": "issuerName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The issuer provider.",
        "name": "options.provider"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The credentials to be used for the\rissuer.",
        "name": "options.credentials"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The user name/account\rname/account id.",
        "name": "options.credentials.accountId"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The password/secret/account\rkey.",
        "name": "options.credentials.password"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Details of the organization as\rprovided to the issuer.",
        "name": "options.organizationDetails"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Id of the organization.",
        "name": "options.organizationDetails.id"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Details of the\rorganization administrator.",
        "name": "options.organizationDetails.adminDetails"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Attributes of the issuer object.",
        "name": "options.attributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the issuer\ris enabled.",
        "name": "options.attributes.enabled"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<IssuerBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 2333,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 74
  },
  {
    "id": "KeyVaultClient#updateCertificateIssuer",
    "longname": "KeyVaultClient#updateCertificateIssuer",
    "name": "updateCertificateIssuer",
    "kind": "function",
    "scope": "instance",
    "description": "Updates the specified certificate issuer.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the issuer.",
        "name": "issuerName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The issuer provider.",
        "name": "options.provider"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The credentials to be used for the\rissuer.",
        "name": "options.credentials"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The user name/account\rname/account id.",
        "name": "options.credentials.accountId"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The password/secret/account\rkey.",
        "name": "options.credentials.password"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Details of the organization as\rprovided to the issuer.",
        "name": "options.organizationDetails"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Id of the organization.",
        "name": "options.organizationDetails.id"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Details of the\rorganization administrator.",
        "name": "options.organizationDetails.adminDetails"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Attributes of the issuer object.",
        "name": "options.attributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the issuer\ris enabled.",
        "name": "options.attributes.enabled"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{IssuerBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link IssuerBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 2396,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 75
  },
  {
    "id": "KeyVaultClient#getCertificateIssuerWithHttpOperationResponse",
    "longname": "KeyVaultClient#getCertificateIssuerWithHttpOperationResponse",
    "name": "getCertificateIssuerWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Lists the specified certificate issuer.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the issuer.",
        "name": "issuerName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<IssuerBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 2419,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 76
  },
  {
    "id": "KeyVaultClient#getCertificateIssuer",
    "longname": "KeyVaultClient#getCertificateIssuer",
    "name": "getCertificateIssuer",
    "kind": "function",
    "scope": "instance",
    "description": "Lists the specified certificate issuer.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the issuer.",
        "name": "issuerName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{IssuerBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link IssuerBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 2458,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 77
  },
  {
    "id": "KeyVaultClient#deleteCertificateIssuerWithHttpOperationResponse",
    "longname": "KeyVaultClient#deleteCertificateIssuerWithHttpOperationResponse",
    "name": "deleteCertificateIssuerWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes the specified certificate issuer.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the issuer.",
        "name": "issuerName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<IssuerBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 2481,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 78
  },
  {
    "id": "KeyVaultClient#deleteCertificateIssuer",
    "longname": "KeyVaultClient#deleteCertificateIssuer",
    "name": "deleteCertificateIssuer",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes the specified certificate issuer.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the issuer.",
        "name": "issuerName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{IssuerBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link IssuerBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 2520,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 79
  },
  {
    "id": "KeyVaultClient#createCertificateWithHttpOperationResponse",
    "longname": "KeyVaultClient#createCertificateWithHttpOperationResponse",
    "name": "createCertificateWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Creates a new certificate. If this is the first version, the certificate\rresource is created.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The management policy for the\rcertificate.",
        "name": "options.certificatePolicy"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the\rkey backing a certificate.",
        "name": "options.certificatePolicy.keyProperties"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the private key can be exported.",
        "name": "options.certificatePolicy.keyProperties.exportable"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The key\rtype.",
        "name": "options.certificatePolicy.keyProperties.keyType"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The key\rsize in bytes. For example;  1024 or 2048.",
        "name": "options.certificatePolicy.keyProperties.keySize"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the same key pair will be used on certificate renewal.",
        "name": "options.certificatePolicy.keyProperties.reuseKey"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of\rthe secret backing a certificate.",
        "name": "options.certificatePolicy.secretProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The\rmedia type (MIME type).",
        "name": "options.certificatePolicy.secretProperties.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the X509 component of a certificate.",
        "name": "options.certificatePolicy.x509CertificateProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The subject\rname. Should be a valid X509 distinguished Name.",
        "name": "options.certificatePolicy.x509CertificateProperties.subject"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "The enhanced key usage.",
        "name": "options.certificatePolicy.x509CertificateProperties.ekus"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The subject alternative names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Email addresses.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Domain names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "User principal names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "List of key\rusages.",
        "name": "options.certificatePolicy.x509CertificateProperties.keyUsage"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The\rduration that the ceritifcate is valid in months.",
        "name": "options.certificatePolicy.x509CertificateProperties.validityInMonths"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Actions that will\rbe performed by Key Vault over the lifetime of a certificate.",
        "name": "options.certificatePolicy.lifetimeActions"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Parameters for\rthe issuer of the X509 component of a certificate.",
        "name": "options.certificatePolicy.issuerParameters"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Name of\rthe referenced issuer object or reserved names; for example, 'Self' or\r'Unknown'.",
        "name": "options.certificatePolicy.issuerParameters.name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of certificate to be requested from the issuer provider.",
        "name": "options.certificatePolicy.issuerParameters.certificateType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The certificate\rattributes.",
        "name": "options.certificatePolicy.attributes"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The attributes of the\rcertificate (optional).",
        "name": "options.certificateAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether\rthe object is enabled.",
        "name": "options.certificateAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in\rUTC.",
        "name": "options.certificateAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.certificateAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateOperation>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 2632,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 80
  },
  {
    "id": "KeyVaultClient#createCertificate",
    "longname": "KeyVaultClient#createCertificate",
    "name": "createCertificate",
    "kind": "function",
    "scope": "instance",
    "description": "Creates a new certificate. If this is the first version, the certificate\rresource is created.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The management policy for the\rcertificate.",
        "name": "options.certificatePolicy"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the\rkey backing a certificate.",
        "name": "options.certificatePolicy.keyProperties"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the private key can be exported.",
        "name": "options.certificatePolicy.keyProperties.exportable"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The key\rtype.",
        "name": "options.certificatePolicy.keyProperties.keyType"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The key\rsize in bytes. For example;  1024 or 2048.",
        "name": "options.certificatePolicy.keyProperties.keySize"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the same key pair will be used on certificate renewal.",
        "name": "options.certificatePolicy.keyProperties.reuseKey"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of\rthe secret backing a certificate.",
        "name": "options.certificatePolicy.secretProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The\rmedia type (MIME type).",
        "name": "options.certificatePolicy.secretProperties.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the X509 component of a certificate.",
        "name": "options.certificatePolicy.x509CertificateProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The subject\rname. Should be a valid X509 distinguished Name.",
        "name": "options.certificatePolicy.x509CertificateProperties.subject"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "The enhanced key usage.",
        "name": "options.certificatePolicy.x509CertificateProperties.ekus"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The subject alternative names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Email addresses.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Domain names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "User principal names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "List of key\rusages.",
        "name": "options.certificatePolicy.x509CertificateProperties.keyUsage"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The\rduration that the ceritifcate is valid in months.",
        "name": "options.certificatePolicy.x509CertificateProperties.validityInMonths"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Actions that will\rbe performed by Key Vault over the lifetime of a certificate.",
        "name": "options.certificatePolicy.lifetimeActions"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Parameters for\rthe issuer of the X509 component of a certificate.",
        "name": "options.certificatePolicy.issuerParameters"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Name of\rthe referenced issuer object or reserved names; for example, 'Self' or\r'Unknown'.",
        "name": "options.certificatePolicy.issuerParameters.name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of certificate to be requested from the issuer provider.",
        "name": "options.certificatePolicy.issuerParameters.certificateType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The certificate\rattributes.",
        "name": "options.certificatePolicy.attributes"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The attributes of the\rcertificate (optional).",
        "name": "options.certificateAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether\rthe object is enabled.",
        "name": "options.certificateAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in\rUTC.",
        "name": "options.certificateAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.certificateAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateOperation} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateOperation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 2760,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 81
  },
  {
    "id": "KeyVaultClient#importCertificateWithHttpOperationResponse",
    "longname": "KeyVaultClient#importCertificateWithHttpOperationResponse",
    "name": "importCertificateWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Imports a certificate into a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Base64 encoded representation of\rthe certificate object to import. This certificate needs to contain the\rprivate key.",
        "name": "base64EncodedCertificate"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "If the private key in\rbase64EncodedCertificate is encrypted, the password used for encryption.",
        "name": "options.password"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The management policy for the\rcertificate.",
        "name": "options.certificatePolicy"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the\rkey backing a certificate.",
        "name": "options.certificatePolicy.keyProperties"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the private key can be exported.",
        "name": "options.certificatePolicy.keyProperties.exportable"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The key\rtype.",
        "name": "options.certificatePolicy.keyProperties.keyType"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The key\rsize in bytes. For example;  1024 or 2048.",
        "name": "options.certificatePolicy.keyProperties.keySize"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the same key pair will be used on certificate renewal.",
        "name": "options.certificatePolicy.keyProperties.reuseKey"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of\rthe secret backing a certificate.",
        "name": "options.certificatePolicy.secretProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The\rmedia type (MIME type).",
        "name": "options.certificatePolicy.secretProperties.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the X509 component of a certificate.",
        "name": "options.certificatePolicy.x509CertificateProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The subject\rname. Should be a valid X509 distinguished Name.",
        "name": "options.certificatePolicy.x509CertificateProperties.subject"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "The enhanced key usage.",
        "name": "options.certificatePolicy.x509CertificateProperties.ekus"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The subject alternative names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Email addresses.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Domain names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "User principal names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "List of key\rusages.",
        "name": "options.certificatePolicy.x509CertificateProperties.keyUsage"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The\rduration that the ceritifcate is valid in months.",
        "name": "options.certificatePolicy.x509CertificateProperties.validityInMonths"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Actions that will\rbe performed by Key Vault over the lifetime of a certificate.",
        "name": "options.certificatePolicy.lifetimeActions"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Parameters for\rthe issuer of the X509 component of a certificate.",
        "name": "options.certificatePolicy.issuerParameters"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Name of\rthe referenced issuer object or reserved names; for example, 'Self' or\r'Unknown'.",
        "name": "options.certificatePolicy.issuerParameters.name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of certificate to be requested from the issuer provider.",
        "name": "options.certificatePolicy.issuerParameters.certificateType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The certificate\rattributes.",
        "name": "options.certificatePolicy.attributes"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The attributes of the\rcertificate (optional).",
        "name": "options.certificateAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether\rthe object is enabled.",
        "name": "options.certificateAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in\rUTC.",
        "name": "options.certificateAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.certificateAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 2878,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 82
  },
  {
    "id": "KeyVaultClient#importCertificate",
    "longname": "KeyVaultClient#importCertificate",
    "name": "importCertificate",
    "kind": "function",
    "scope": "instance",
    "description": "Imports a certificate into a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Base64 encoded representation of\rthe certificate object to import. This certificate needs to contain the\rprivate key.",
        "name": "base64EncodedCertificate"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "If the private key in\rbase64EncodedCertificate is encrypted, the password used for encryption.",
        "name": "options.password"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The management policy for the\rcertificate.",
        "name": "options.certificatePolicy"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the\rkey backing a certificate.",
        "name": "options.certificatePolicy.keyProperties"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the private key can be exported.",
        "name": "options.certificatePolicy.keyProperties.exportable"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The key\rtype.",
        "name": "options.certificatePolicy.keyProperties.keyType"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The key\rsize in bytes. For example;  1024 or 2048.",
        "name": "options.certificatePolicy.keyProperties.keySize"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the same key pair will be used on certificate renewal.",
        "name": "options.certificatePolicy.keyProperties.reuseKey"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of\rthe secret backing a certificate.",
        "name": "options.certificatePolicy.secretProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The\rmedia type (MIME type).",
        "name": "options.certificatePolicy.secretProperties.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the X509 component of a certificate.",
        "name": "options.certificatePolicy.x509CertificateProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The subject\rname. Should be a valid X509 distinguished Name.",
        "name": "options.certificatePolicy.x509CertificateProperties.subject"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "The enhanced key usage.",
        "name": "options.certificatePolicy.x509CertificateProperties.ekus"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The subject alternative names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Email addresses.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Domain names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "User principal names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "List of key\rusages.",
        "name": "options.certificatePolicy.x509CertificateProperties.keyUsage"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The\rduration that the ceritifcate is valid in months.",
        "name": "options.certificatePolicy.x509CertificateProperties.validityInMonths"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Actions that will\rbe performed by Key Vault over the lifetime of a certificate.",
        "name": "options.certificatePolicy.lifetimeActions"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Parameters for\rthe issuer of the X509 component of a certificate.",
        "name": "options.certificatePolicy.issuerParameters"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Name of\rthe referenced issuer object or reserved names; for example, 'Self' or\r'Unknown'.",
        "name": "options.certificatePolicy.issuerParameters.name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of certificate to be requested from the issuer provider.",
        "name": "options.certificatePolicy.issuerParameters.certificateType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The certificate\rattributes.",
        "name": "options.certificatePolicy.attributes"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The attributes of the\rcertificate (optional).",
        "name": "options.certificateAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether\rthe object is enabled.",
        "name": "options.certificateAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in\rUTC.",
        "name": "options.certificateAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.certificateAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 3012,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 83
  },
  {
    "id": "KeyVaultClient#getCertificateVersionsWithHttpOperationResponse",
    "longname": "KeyVaultClient#getCertificateVersionsWithHttpOperationResponse",
    "name": "getCertificateVersionsWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "List the versions of a certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 3038,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 84
  },
  {
    "id": "KeyVaultClient#getCertificateVersions",
    "longname": "KeyVaultClient#getCertificateVersions",
    "name": "getCertificateVersions",
    "kind": "function",
    "scope": "instance",
    "description": "List the versions of a certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 3080,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 85
  },
  {
    "id": "KeyVaultClient#getCertificatePolicyWithHttpOperationResponse",
    "longname": "KeyVaultClient#getCertificatePolicyWithHttpOperationResponse",
    "name": "getCertificatePolicyWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Lists the policy for a certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate in a given key\rvault.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificatePolicy>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 3104,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 86
  },
  {
    "id": "KeyVaultClient#getCertificatePolicy",
    "longname": "KeyVaultClient#getCertificatePolicy",
    "name": "getCertificatePolicy",
    "kind": "function",
    "scope": "instance",
    "description": "Lists the policy for a certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate in a given key\rvault.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificatePolicy} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificatePolicy} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 3144,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 87
  },
  {
    "id": "KeyVaultClient#updateCertificatePolicyWithHttpOperationResponse",
    "longname": "KeyVaultClient#updateCertificatePolicyWithHttpOperationResponse",
    "name": "updateCertificatePolicyWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Updates the policy for a certificate. Set specified members in the\rcertificate policy. Leave others as null.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate in the given\rvault.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "The policy for the certificate.",
        "name": "certificatePolicy"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the key\rbacking a certificate.",
        "name": "certificatePolicy.keyProperties"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if\rthe private key can be exported.",
        "name": "certificatePolicy.keyProperties.exportable"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The key type.",
        "name": "certificatePolicy.keyProperties.keyType"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The key size in\rbytes. For example;  1024 or 2048.",
        "name": "certificatePolicy.keyProperties.keySize"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the\rsame key pair will be used on certificate renewal.",
        "name": "certificatePolicy.keyProperties.reuseKey"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the\rsecret backing a certificate.",
        "name": "certificatePolicy.secretProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The media\rtype (MIME type).",
        "name": "certificatePolicy.secretProperties.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of\rthe X509 component of a certificate.",
        "name": "certificatePolicy.x509CertificateProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The\rsubject name. Should be a valid X509 distinguished Name.",
        "name": "certificatePolicy.x509CertificateProperties.subject"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "The\renhanced key usage.",
        "name": "certificatePolicy.x509CertificateProperties.ekus"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The\rsubject alternative names.",
        "name": "certificatePolicy.x509CertificateProperties.subjectAlternativeNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Email addresses.",
        "name": "certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Domain names.",
        "name": "certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "User principal names.",
        "name": "certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "List\rof key usages.",
        "name": "certificatePolicy.x509CertificateProperties.keyUsage"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The duration\rthat the ceritifcate is valid in months.",
        "name": "certificatePolicy.x509CertificateProperties.validityInMonths"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Actions that will be\rperformed by Key Vault over the lifetime of a certificate.",
        "name": "certificatePolicy.lifetimeActions"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Parameters for the\rissuer of the X509 component of a certificate.",
        "name": "certificatePolicy.issuerParameters"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Name of the\rreferenced issuer object or reserved names; for example, 'Self' or\r'Unknown'.",
        "name": "certificatePolicy.issuerParameters.name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of\rcertificate to be requested from the issuer provider.",
        "name": "certificatePolicy.issuerParameters.certificateType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The certificate attributes.",
        "name": "certificatePolicy.attributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether\rthe object is enabled.",
        "name": "certificatePolicy.attributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in\rUTC.",
        "name": "certificatePolicy.attributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "certificatePolicy.attributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificatePolicy>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 3246,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 88
  },
  {
    "id": "KeyVaultClient#updateCertificatePolicy",
    "longname": "KeyVaultClient#updateCertificatePolicy",
    "name": "updateCertificatePolicy",
    "kind": "function",
    "scope": "instance",
    "description": "Updates the policy for a certificate. Set specified members in the\rcertificate policy. Leave others as null.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate in the given\rvault.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "The policy for the certificate.",
        "name": "certificatePolicy"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the key\rbacking a certificate.",
        "name": "certificatePolicy.keyProperties"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if\rthe private key can be exported.",
        "name": "certificatePolicy.keyProperties.exportable"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The key type.",
        "name": "certificatePolicy.keyProperties.keyType"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The key size in\rbytes. For example;  1024 or 2048.",
        "name": "certificatePolicy.keyProperties.keySize"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the\rsame key pair will be used on certificate renewal.",
        "name": "certificatePolicy.keyProperties.reuseKey"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the\rsecret backing a certificate.",
        "name": "certificatePolicy.secretProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The media\rtype (MIME type).",
        "name": "certificatePolicy.secretProperties.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of\rthe X509 component of a certificate.",
        "name": "certificatePolicy.x509CertificateProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The\rsubject name. Should be a valid X509 distinguished Name.",
        "name": "certificatePolicy.x509CertificateProperties.subject"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "The\renhanced key usage.",
        "name": "certificatePolicy.x509CertificateProperties.ekus"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The\rsubject alternative names.",
        "name": "certificatePolicy.x509CertificateProperties.subjectAlternativeNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Email addresses.",
        "name": "certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Domain names.",
        "name": "certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "User principal names.",
        "name": "certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "List\rof key usages.",
        "name": "certificatePolicy.x509CertificateProperties.keyUsage"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The duration\rthat the ceritifcate is valid in months.",
        "name": "certificatePolicy.x509CertificateProperties.validityInMonths"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Actions that will be\rperformed by Key Vault over the lifetime of a certificate.",
        "name": "certificatePolicy.lifetimeActions"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Parameters for the\rissuer of the X509 component of a certificate.",
        "name": "certificatePolicy.issuerParameters"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Name of the\rreferenced issuer object or reserved names; for example, 'Self' or\r'Unknown'.",
        "name": "certificatePolicy.issuerParameters.name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of\rcertificate to be requested from the issuer provider.",
        "name": "certificatePolicy.issuerParameters.certificateType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The certificate attributes.",
        "name": "certificatePolicy.attributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether\rthe object is enabled.",
        "name": "certificatePolicy.attributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in\rUTC.",
        "name": "certificatePolicy.attributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "certificatePolicy.attributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificatePolicy} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificatePolicy} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 3364,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 89
  },
  {
    "id": "KeyVaultClient#updateCertificateWithHttpOperationResponse",
    "longname": "KeyVaultClient#updateCertificateWithHttpOperationResponse",
    "name": "updateCertificateWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Updates the specified attributes associated with the given certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The certificate identifier. It may or may not contain a version path. \rIf a version is not provided, the latest certificate version is used.",
        "name": "certificateIdentifier"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The management policy for the\rcertificate.",
        "name": "options.certificatePolicy"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the\rkey backing a certificate.",
        "name": "options.certificatePolicy.keyProperties"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the private key can be exported.",
        "name": "options.certificatePolicy.keyProperties.exportable"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The key\rtype.",
        "name": "options.certificatePolicy.keyProperties.keyType"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The key\rsize in bytes. For example;  1024 or 2048.",
        "name": "options.certificatePolicy.keyProperties.keySize"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the same key pair will be used on certificate renewal.",
        "name": "options.certificatePolicy.keyProperties.reuseKey"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of\rthe secret backing a certificate.",
        "name": "options.certificatePolicy.secretProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The\rmedia type (MIME type).",
        "name": "options.certificatePolicy.secretProperties.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the X509 component of a certificate.",
        "name": "options.certificatePolicy.x509CertificateProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The subject\rname. Should be a valid X509 distinguished Name.",
        "name": "options.certificatePolicy.x509CertificateProperties.subject"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "The enhanced key usage.",
        "name": "options.certificatePolicy.x509CertificateProperties.ekus"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The subject alternative names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Email addresses.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Domain names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "User principal names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "List of key\rusages.",
        "name": "options.certificatePolicy.x509CertificateProperties.keyUsage"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The\rduration that the ceritifcate is valid in months.",
        "name": "options.certificatePolicy.x509CertificateProperties.validityInMonths"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Actions that will\rbe performed by Key Vault over the lifetime of a certificate.",
        "name": "options.certificatePolicy.lifetimeActions"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Parameters for\rthe issuer of the X509 component of a certificate.",
        "name": "options.certificatePolicy.issuerParameters"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Name of\rthe referenced issuer object or reserved names; for example, 'Self' or\r'Unknown'.",
        "name": "options.certificatePolicy.issuerParameters.name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of certificate to be requested from the issuer provider.",
        "name": "options.certificatePolicy.issuerParameters.certificateType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The certificate\rattributes.",
        "name": "options.certificatePolicy.attributes"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The attributes of the\rcertificate (optional).",
        "name": "options.certificateAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether\rthe object is enabled.",
        "name": "options.certificateAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in\rUTC.",
        "name": "options.certificateAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.certificateAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 3473,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 90
  },
  {
    "id": "KeyVaultClient#updateCertificate",
    "longname": "KeyVaultClient#updateCertificate",
    "name": "updateCertificate",
    "kind": "function",
    "scope": "instance",
    "description": "Updates the attributes associated with the specified certificate",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The certificate identifier. It may or may not contain a version path. \rIf a version is not provided, the latest certificate version is used.",
        "name": "certificateIdentifier"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The management policy for the\rcertificate",
        "name": "options.certificatePolicy"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the\rkey backing a certificate.",
        "name": "options.certificatePolicy.keyProperties"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the private key can be exported.",
        "name": "options.certificatePolicy.keyProperties.exportable"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The key\rtype.",
        "name": "options.certificatePolicy.keyProperties.keyType"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The key\rsize in bytes. e.g. 2048.",
        "name": "options.certificatePolicy.keyProperties.keySize"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the same key pair will be used on certificate renewal.",
        "name": "options.certificatePolicy.keyProperties.reuseKey"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of\rthe secret backing a certificate.",
        "name": "options.certificatePolicy.secretProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The media type (MIME type).",
        "name": "options.certificatePolicy.secretProperties.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the X509 component of a certificate.",
        "name": "options.certificatePolicy.x509CertificateProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The subject\rname. Should be a valid X509 Distinguished Name.",
        "name": "options.certificatePolicy.x509CertificateProperties.subject"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "The enhanced key usage.",
        "name": "options.certificatePolicy.x509CertificateProperties.ekus"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The subject alternative names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Email addresses.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Domain names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "User principal names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "List of key\rusages.",
        "name": "options.certificatePolicy.x509CertificateProperties.keyUsage"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The\rduration that the ceritifcate is valid in months.",
        "name": "options.certificatePolicy.x509CertificateProperties.validityInMonths"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Actions that\rwill be performed by Key Vault over the lifetime of a certificate.",
        "name": "options.certificatePolicy.lifetimeActions"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Parameters for\rthe issuer of the X509 component of a certificate.",
        "name": "options.certificatePolicy.issuerParameters"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Name of\rthe referenced issuer object or reserved names e.g. 'Self', 'Unknown'.",
        "name": "options.certificatePolicy.issuerParameters.name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of\rcertificate to be requested from the issuer provider.",
        "name": "options.certificatePolicy.issuerParameters.certificateType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The certificate\rattributes.",
        "name": "options.certificatePolicy.attributes"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The attributes of the\rcertificate (optional)",
        "name": "options.certificateAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether\rthe object is enabled",
        "name": "options.certificateAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in\rUTC",
        "name": "options.certificateAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC",
        "name": "options.certificateAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application-specific metadata in the form of\rkey-value pairs",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link CertificateBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 3591,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 91
  },
  {
    "id": "KeyVaultClient#getCertificateWithHttpOperationResponse",
    "longname": "KeyVaultClient#getCertificateWithHttpOperationResponse",
    "name": "getCertificateWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Gets information about a specified certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The certificate identifier. It may or may not contain a version path. \rIf a version is not provided, the latest certificate version is used.",
        "name": "certificateIdentifier"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 3614,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 92
  },
  {
    "id": "KeyVaultClient#getCertificate",
    "longname": "KeyVaultClient#getCertificate",
    "name": "getCertificate",
    "kind": "function",
    "scope": "instance",
    "description": "Gets information about a specified certificate..",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The certificate identifier. It may or may not contain a version path. \rIf a version is not provided, the latest certificate version is used.",
        "name": "certificateIdentifier"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See {@link CertificateBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 3644,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 93
  },
  {
    "id": "KeyVaultClient#updateCertificateOperationWithHttpOperationResponse",
    "longname": "KeyVaultClient#updateCertificateOperationWithHttpOperationResponse",
    "name": "updateCertificateOperationWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Updates a certificate operation.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "Indicates if cancellation was\rrequested on the certificate operation.",
        "name": "cancellationRequested"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateOperation>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 3672,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 94
  },
  {
    "id": "KeyVaultClient#updateCertificateOperation",
    "longname": "KeyVaultClient#updateCertificateOperation",
    "name": "updateCertificateOperation",
    "kind": "function",
    "scope": "instance",
    "description": "Updates a certificate operation.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "Indicates if cancellation was\rrequested on the certificate operation.",
        "name": "cancellationRequested"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateOperation} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateOperation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 3714,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 95
  },
  {
    "id": "KeyVaultClient#getCertificateOperationWithHttpOperationResponse",
    "longname": "KeyVaultClient#getCertificateOperationWithHttpOperationResponse",
    "name": "getCertificateOperationWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Gets the operation associated with a specified certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateOperation>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 3737,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 96
  },
  {
    "id": "KeyVaultClient#getCertificateOperation",
    "longname": "KeyVaultClient#getCertificateOperation",
    "name": "getCertificateOperation",
    "kind": "function",
    "scope": "instance",
    "description": "Gets the operation associated with a specified certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateOperation} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateOperation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 3776,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 97
  },
  {
    "id": "KeyVaultClient#deleteCertificateOperationWithHttpOperationResponse",
    "longname": "KeyVaultClient#deleteCertificateOperationWithHttpOperationResponse",
    "name": "deleteCertificateOperationWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes the operation for a specified certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateOperation>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 3799,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 98
  },
  {
    "id": "KeyVaultClient#deleteCertificateOperation",
    "longname": "KeyVaultClient#deleteCertificateOperation",
    "name": "deleteCertificateOperation",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes the operation for a specified certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateOperation} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateOperation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 3838,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 99
  },
  {
    "id": "KeyVaultClient#mergeCertificateWithHttpOperationResponse",
    "longname": "KeyVaultClient#mergeCertificateWithHttpOperationResponse",
    "name": "mergeCertificateWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Merges a certificate or a certificate chain with a key pair existing on the\rserver.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "description": "The certificate or the certificate chain to\rmerge.",
        "name": "x509Certificates"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The attributes of the\rcertificate (optional).",
        "name": "options.certificateAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether\rthe object is enabled.",
        "name": "options.certificateAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in\rUTC.",
        "name": "options.certificateAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.certificateAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 3879,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 100
  },
  {
    "id": "KeyVaultClient#mergeCertificate",
    "longname": "KeyVaultClient#mergeCertificate",
    "name": "mergeCertificate",
    "kind": "function",
    "scope": "instance",
    "description": "Merges a certificate or a certificate chain with a key pair existing on the\rserver.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "description": "The certificate or the certificate chain to\rmerge.",
        "name": "x509Certificates"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The attributes of the\rcertificate (optional).",
        "name": "options.certificateAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether\rthe object is enabled.",
        "name": "options.certificateAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in\rUTC.",
        "name": "options.certificateAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.certificateAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 3936,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 101
  },
  {
    "id": "KeyVaultClient#getKeyVersionsNextWithHttpOperationResponse",
    "longname": "KeyVaultClient#getKeyVersionsNextWithHttpOperationResponse",
    "name": "getKeyVersionsNextWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Retrieves a list of individual key versions with the same key name. The full\rkey identifier, attributes, and tags are provided in the response.\rAuthorization: Requires the keys/list permission.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 3959,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 102
  },
  {
    "id": "KeyVaultClient#getKeyVersionsNext",
    "longname": "KeyVaultClient#getKeyVersionsNext",
    "name": "getKeyVersionsNext",
    "kind": "function",
    "scope": "instance",
    "description": "Retrieves a list of individual key versions with the same key name. The full\rkey identifier, attributes, and tags are provided in the response.\rAuthorization: Requires the keys/list permission.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 3998,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 103
  },
  {
    "id": "KeyVaultClient#getKeysNextWithHttpOperationResponse",
    "longname": "KeyVaultClient#getKeysNextWithHttpOperationResponse",
    "name": "getKeysNextWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "List keys in the specified vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 4019,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 104
  },
  {
    "id": "KeyVaultClient#getKeysNext",
    "longname": "KeyVaultClient#getKeysNext",
    "name": "getKeysNext",
    "kind": "function",
    "scope": "instance",
    "description": "List keys in the specified vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 4056,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 105
  },
  {
    "id": "KeyVaultClient#getSecretsNextWithHttpOperationResponse",
    "longname": "KeyVaultClient#getSecretsNextWithHttpOperationResponse",
    "name": "getSecretsNextWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "List secrets in a specified key vault",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<SecretListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 4077,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 106
  },
  {
    "id": "KeyVaultClient#getSecretsNext",
    "longname": "KeyVaultClient#getSecretsNext",
    "name": "getSecretsNext",
    "kind": "function",
    "scope": "instance",
    "description": "List secrets in a specified key vault",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{SecretListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 4114,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 107
  },
  {
    "id": "KeyVaultClient#getSecretVersionsNextWithHttpOperationResponse",
    "longname": "KeyVaultClient#getSecretVersionsNextWithHttpOperationResponse",
    "name": "getSecretVersionsNextWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "List the versions of the specified secret.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<SecretListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 4135,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 108
  },
  {
    "id": "KeyVaultClient#getSecretVersionsNext",
    "longname": "KeyVaultClient#getSecretVersionsNext",
    "name": "getSecretVersionsNext",
    "kind": "function",
    "scope": "instance",
    "description": "List the versions of the specified secret.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{SecretListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 4172,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 109
  },
  {
    "id": "KeyVaultClient#getCertificatesNextWithHttpOperationResponse",
    "longname": "KeyVaultClient#getCertificatesNextWithHttpOperationResponse",
    "name": "getCertificatesNextWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "List certificates in a specified key vault",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 4193,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 110
  },
  {
    "id": "KeyVaultClient#getCertificatesNext",
    "longname": "KeyVaultClient#getCertificatesNext",
    "name": "getCertificatesNext",
    "kind": "function",
    "scope": "instance",
    "description": "List certificates in a specified key vault",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 4230,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 111
  },
  {
    "id": "KeyVaultClient#getCertificateIssuersNextWithHttpOperationResponse",
    "longname": "KeyVaultClient#getCertificateIssuersNextWithHttpOperationResponse",
    "name": "getCertificateIssuersNextWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "List certificate issuers for a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateIssuerListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 4251,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 112
  },
  {
    "id": "KeyVaultClient#getCertificateIssuersNext",
    "longname": "KeyVaultClient#getCertificateIssuersNext",
    "name": "getCertificateIssuersNext",
    "kind": "function",
    "scope": "instance",
    "description": "List certificate issuers for a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateIssuerListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateIssuerListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 4289,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 113
  },
  {
    "id": "KeyVaultClient#getCertificateVersionsNextWithHttpOperationResponse",
    "longname": "KeyVaultClient#getCertificateVersionsNextWithHttpOperationResponse",
    "name": "getCertificateVersionsNextWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "List the versions of a certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 4310,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 114
  },
  {
    "id": "KeyVaultClient#getCertificateVersionsNext",
    "longname": "KeyVaultClient#getCertificateVersionsNext",
    "name": "getCertificateVersionsNext",
    "kind": "function",
    "scope": "instance",
    "description": "List the versions of a certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 4347,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 115
  },
  {
    "id": "KeyVaultClient#getPendingCertificateSigningRequestWithHttpOperationResponse",
    "longname": "KeyVaultClient#getPendingCertificateSigningRequestWithHttpOperationResponse",
    "name": "getPendingCertificateSigningRequestWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Gets the certificate operation response.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, e.g.\rhttps://myvault.vault.azure.net",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the request",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 4369,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 116
  },
  {
    "id": "KeyVaultClient#getPendingCertificateSigningRequest",
    "longname": "KeyVaultClient#getPendingCertificateSigningRequest",
    "name": "getPendingCertificateSigningRequest",
    "kind": "function",
    "scope": "instance",
    "description": "Gets the certificate operation response.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, e.g.\rhttps://myvault.vault.azure.net",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateOperation} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateOperation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 4417,
      "filename": "keyVault.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 117
  },
  {
    "id": "KeyVaultClient#createKeyWithHttpOperationResponse",
    "longname": "KeyVaultClient#createKeyWithHttpOperationResponse",
    "name": "createKeyWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Creates a new key, stores it, then returns key parameters and attributes to\rthe client. The create key operation can be used to create any key type in\rAzure Key Vault. If the named key already exists, Azure Key Vault creates a\rnew version of the key. Authorization: Requires the keys/create permission.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name for the new key. The system will generate\rthe version name for the new key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The type of key to create. For valid key types, see\rJsonWebKeyType. Supported JsonWebKey key types (kty) for Elliptic Curve,\rRSA, HSM, Octet. Possible values include: 'EC', 'RSA', 'RSA-HSM', 'oct'",
        "name": "kty"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The key size in bytes. For example, 1024\ror 2048.",
        "name": "options.keySize"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "name": "options.keyOps"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "name": "options.keyAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the\robject is enabled.",
        "name": "options.keyAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in UTC.",
        "name": "options.keyAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.keyAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 8553,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 170
  },
  {
    "id": "KeyVaultClient#createKey",
    "longname": "KeyVaultClient#createKey",
    "name": "createKey",
    "kind": "function",
    "scope": "instance",
    "description": "Creates a new key, stores it, then returns key parameters and attributes to\rthe client. The create key operation can be used to create any key type in\rAzure Key Vault. If the named key already exists, Azure Key Vault creates a\rnew version of the key. Authorization: Requires the keys/create permission.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name for the new key. The system will generate\rthe version name for the new key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The type of key to create. For valid key types, see\rJsonWebKeyType. Supported JsonWebKey key types (kty) for Elliptic Curve,\rRSA, HSM, Octet. Possible values include: 'EC', 'RSA', 'RSA-HSM', 'oct'",
        "name": "kty"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The key size in bytes. For example, 1024\ror 2048.",
        "name": "options.keySize"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "name": "options.keyOps"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "name": "options.keyAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the\robject is enabled.",
        "name": "options.keyAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in UTC.",
        "name": "options.keyAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.keyAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 8627,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 171
  },
  {
    "id": "KeyVaultClient#importKeyWithHttpOperationResponse",
    "longname": "KeyVaultClient#importKeyWithHttpOperationResponse",
    "name": "importKeyWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Imports an externally created key, stores it, and returns key parameters and\rattributes to the client. The import key operation may be used to import any\rkey type into an Azure Key Vault. If the named key already exists, Azure Key\rVault creates a new version of the key. Authorization: requires the\rkeys/import permission.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Name for the imported key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "The Json web key",
        "name": "key"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Key identifier.",
        "name": "key.kid"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Supported JsonWebKey key types (kty) for Elliptic\rCurve, RSA, HSM, Octet. Kty is usually set to RSA. Possible values include:\r'EC', 'RSA', 'RSA-HSM', 'oct'",
        "name": "key.kty"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "name": "key.keyOps"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA modulus.",
        "name": "key.n"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA public exponent.",
        "name": "key.e"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA private exponent.",
        "name": "key.d"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA private key parameter.",
        "name": "key.dp"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA private key parameter.",
        "name": "key.dq"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA private key parameter.",
        "name": "key.qi"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA secret prime.",
        "name": "key.p"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA secret prime, with p < q.",
        "name": "key.q"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "Symmetric key.",
        "name": "key.k"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "HSM Token, used with 'Bring Your Own Key'.",
        "name": "key.t"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Whether to import as a hardware key (HSM) or\rsoftware key.",
        "name": "options.hsm"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The key management attributes.",
        "name": "options.keyAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the\robject is enabled.",
        "name": "options.keyAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in UTC.",
        "name": "options.keyAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.keyAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 8715,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 172
  },
  {
    "id": "KeyVaultClient#importKey",
    "longname": "KeyVaultClient#importKey",
    "name": "importKey",
    "kind": "function",
    "scope": "instance",
    "description": "Imports an externally created key, stores it, and returns key parameters and\rattributes to the client. The import key operation may be used to import any\rkey type into an Azure Key Vault. If the named key already exists, Azure Key\rVault creates a new version of the key. Authorization: requires the\rkeys/import permission.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Name for the imported key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "The Json web key",
        "name": "key"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Key identifier.",
        "name": "key.kid"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Supported JsonWebKey key types (kty) for Elliptic\rCurve, RSA, HSM, Octet. Kty is usually set to RSA. Possible values include:\r'EC', 'RSA', 'RSA-HSM', 'oct'",
        "name": "key.kty"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "name": "key.keyOps"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA modulus.",
        "name": "key.n"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA public exponent.",
        "name": "key.e"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA private exponent.",
        "name": "key.d"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA private key parameter.",
        "name": "key.dp"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA private key parameter.",
        "name": "key.dq"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA private key parameter.",
        "name": "key.qi"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA secret prime.",
        "name": "key.p"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "RSA secret prime, with p < q.",
        "name": "key.q"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "Symmetric key.",
        "name": "key.k"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "optional": true,
        "description": "HSM Token, used with 'Bring Your Own Key'.",
        "name": "key.t"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Whether to import as a hardware key (HSM) or\rsoftware key.",
        "name": "options.hsm"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The key management attributes.",
        "name": "options.keyAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the\robject is enabled.",
        "name": "options.keyAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in UTC.",
        "name": "options.keyAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.keyAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 8813,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 173
  },
  {
    "id": "KeyVaultClient#deleteKeyWithHttpOperationResponse",
    "longname": "KeyVaultClient#deleteKeyWithHttpOperationResponse",
    "name": "deleteKeyWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes a key of any type from storage in Azure Key Vault. The delete key\roperation cannot be used to remove individual versions of a key. This\roperation removes the cryptographic material associated with the key, which\rmeans the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt\roperations. Authorization: Requires the keys/delete permission.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key to delete.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 8856,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 174
  },
  {
    "id": "KeyVaultClient#deleteKey",
    "longname": "KeyVaultClient#deleteKey",
    "name": "deleteKey",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes a key of any type from storage in Azure Key Vault. The delete key\roperation cannot be used to remove individual versions of a key. This\roperation removes the cryptographic material associated with the key, which\rmeans the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt\roperations. Authorization: Requires the keys/delete permission.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key to delete.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 8909,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 175
  },
  {
    "id": "KeyVaultClient#updateKeyWithHttpOperationResponse",
    "longname": "KeyVaultClient#updateKeyWithHttpOperationResponse",
    "name": "updateKeyWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "The update key operation changes specified attributes of a stored key and\rcan be applied to any key type and key version stored in Azure Key Vault.\rThe cryptographic material of a key itself cannot be changed. In order to\rperform this operation, the key must already exist in the Key Vault.\rAuthorization: requires the keys/update permission.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of key to update.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the key to update.",
        "name": "keyVersion"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Json web key operations. For more\rinformation on possible key operations, see JsonWebKeyOperation.",
        "name": "options.keyOps"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "name": "options.keyAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the\robject is enabled.",
        "name": "options.keyAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in UTC.",
        "name": "options.keyAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.keyAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 8969,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 176
  },
  {
    "id": "KeyVaultClient#updateKey",
    "longname": "KeyVaultClient#updateKey",
    "name": "updateKey",
    "kind": "function",
    "scope": "instance",
    "description": "The update key operation changes specified attributes of a stored key and\rcan be applied to any key type and key version stored in Azure Key Vault.\rThe cryptographic material of a key itself cannot be changed. In order to\rperform this operation, the key must already exist in the Key Vault.\rAuthorization: requires the keys/update permission.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of key to update.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the key to update.",
        "name": "keyVersion"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Json web key operations. For more\rinformation on possible key operations, see JsonWebKeyOperation.",
        "name": "options.keyOps"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "name": "options.keyAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the\robject is enabled.",
        "name": "options.keyAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in UTC.",
        "name": "options.keyAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.keyAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 9039,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 177
  },
  {
    "id": "KeyVaultClient#getKeyWithHttpOperationResponse",
    "longname": "KeyVaultClient#getKeyWithHttpOperationResponse",
    "name": "getKeyWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Gets the public part of a stored key. The get key operation is applicable to\rall key types. If the requested key is symmetric, then no key material is\rreleased in the response. Authorization: Requires the keys/get permission.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key to get.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Adding the version parameter retrieves a specific\rversion of a key.",
        "name": "keyVersion"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 9083,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 178
  },
  {
    "id": "KeyVaultClient#getKey",
    "longname": "KeyVaultClient#getKey",
    "name": "getKey",
    "kind": "function",
    "scope": "instance",
    "description": "Gets the public part of a stored key. The get key operation is applicable to\rall key types. If the requested key is symmetric, then no key material is\rreleased in the response. Authorization: Requires the keys/get permission.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key to get.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Adding the version parameter retrieves a specific\rversion of a key.",
        "name": "keyVersion"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 9137,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 179
  },
  {
    "id": "KeyVaultClient#getKeyVersionsWithHttpOperationResponse",
    "longname": "KeyVaultClient#getKeyVersionsWithHttpOperationResponse",
    "name": "getKeyVersionsWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Retrieves a list of individual key versions with the same key name. The full\rkey identifier, attributes, and tags are provided in the response.\rAuthorization: Requires the keys/list permission.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 9181,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 180
  },
  {
    "id": "KeyVaultClient#getKeyVersions",
    "longname": "KeyVaultClient#getKeyVersions",
    "name": "getKeyVersions",
    "kind": "function",
    "scope": "instance",
    "description": "Retrieves a list of individual key versions with the same key name. The full\rkey identifier, attributes, and tags are provided in the response.\rAuthorization: Requires the keys/list permission.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 9235,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 181
  },
  {
    "id": "KeyVaultClient#getKeysWithHttpOperationResponse",
    "longname": "KeyVaultClient#getKeysWithHttpOperationResponse",
    "name": "getKeysWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "List keys in the specified vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 9275,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 182
  },
  {
    "id": "KeyVaultClient#getKeys",
    "longname": "KeyVaultClient#getKeys",
    "name": "getKeys",
    "kind": "function",
    "scope": "instance",
    "description": "List keys in the specified vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 9325,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 183
  },
  {
    "id": "KeyVaultClient#backupKeyWithHttpOperationResponse",
    "longname": "KeyVaultClient#backupKeyWithHttpOperationResponse",
    "name": "backupKeyWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Requests that a backup of the specified key be downloaded to the client.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<BackupKeyResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 9364,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 184
  },
  {
    "id": "KeyVaultClient#backupKey",
    "longname": "KeyVaultClient#backupKey",
    "name": "backupKey",
    "kind": "function",
    "scope": "instance",
    "description": "Requests that a backup of the specified key be downloaded to the client.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{BackupKeyResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link BackupKeyResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 9413,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 185
  },
  {
    "id": "KeyVaultClient#restoreKeyWithHttpOperationResponse",
    "longname": "KeyVaultClient#restoreKeyWithHttpOperationResponse",
    "name": "restoreKeyWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Restores a backed up key to a vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "description": "The backup blob associated with a key\rbundle.",
        "name": "keyBundleBackup"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 9453,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 186
  },
  {
    "id": "KeyVaultClient#restoreKey",
    "longname": "KeyVaultClient#restoreKey",
    "name": "restoreKey",
    "kind": "function",
    "scope": "instance",
    "description": "Restores a backed up key to a vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "description": "The backup blob associated with a key\rbundle.",
        "name": "keyBundleBackup"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 9503,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 187
  },
  {
    "id": "KeyVaultClient#encryptWithHttpOperationResponse",
    "longname": "KeyVaultClient#encryptWithHttpOperationResponse",
    "name": "encryptWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Encrypts an arbitrary sequence of bytes using an encryption key that is\rstored in a key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the key.",
        "name": "keyVersion"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyOperationResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 9550,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 188
  },
  {
    "id": "KeyVaultClient#encrypt",
    "longname": "KeyVaultClient#encrypt",
    "name": "encrypt",
    "kind": "function",
    "scope": "instance",
    "description": "Encrypts an arbitrary sequence of bytes using an encryption key that is\rstored in a key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the key.",
        "name": "keyVersion"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyOperationResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyOperationResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 9607,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 189
  },
  {
    "id": "KeyVaultClient#decryptWithHttpOperationResponse",
    "longname": "KeyVaultClient#decryptWithHttpOperationResponse",
    "name": "decryptWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Decrypts a single block of encrypted data.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the key.",
        "name": "keyVersion"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyOperationResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 9653,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 190
  },
  {
    "id": "KeyVaultClient#decrypt",
    "longname": "KeyVaultClient#decrypt",
    "name": "decrypt",
    "kind": "function",
    "scope": "instance",
    "description": "Decrypts a single block of encrypted data.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the key.",
        "name": "keyVersion"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyOperationResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyOperationResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 9709,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 191
  },
  {
    "id": "KeyVaultClient#signWithHttpOperationResponse",
    "longname": "KeyVaultClient#signWithHttpOperationResponse",
    "name": "signWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Creates a signature from a digest using the specified key.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the key.",
        "name": "keyVersion"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The signing/verification algorithm identifier. For\rmore information on possible algorithm types, see\rJsonWebKeySignatureAlgorithm. Possible values include: 'RS256', 'RS384',\r'RS512', 'RSNULL'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyOperationResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 9757,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 192
  },
  {
    "id": "KeyVaultClient#sign",
    "longname": "KeyVaultClient#sign",
    "name": "sign",
    "kind": "function",
    "scope": "instance",
    "description": "Creates a signature from a digest using the specified key.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the key.",
        "name": "keyVersion"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The signing/verification algorithm identifier. For\rmore information on possible algorithm types, see\rJsonWebKeySignatureAlgorithm. Possible values include: 'RS256', 'RS384',\r'RS512', 'RSNULL'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyOperationResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyOperationResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 9815,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 193
  },
  {
    "id": "KeyVaultClient#verifyWithHttpOperationResponse",
    "longname": "KeyVaultClient#verifyWithHttpOperationResponse",
    "name": "verifyWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Verifies a signature using a specified key.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the key.",
        "name": "keyVersion"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The signing/verification algorithm. For more\rinformation on possible algorithm types, see JsonWebKeySignatureAlgorithm.\rPossible values include: 'RS256', 'RS384', 'RS512', 'RSNULL'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "description": "The digest used for signing.",
        "name": "digest"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "description": "The signature to be verified.",
        "name": "signature"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyVerifyResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 9864,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 194
  },
  {
    "id": "KeyVaultClient#verify",
    "longname": "KeyVaultClient#verify",
    "name": "verify",
    "kind": "function",
    "scope": "instance",
    "description": "Verifies a signature using a specified key.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the key.",
        "name": "keyVersion"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The signing/verification algorithm. For more\rinformation on possible algorithm types, see JsonWebKeySignatureAlgorithm.\rPossible values include: 'RS256', 'RS384', 'RS512', 'RSNULL'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "description": "The digest used for signing.",
        "name": "digest"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "description": "The signature to be verified.",
        "name": "signature"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyVerifyResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyVerifyResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 9923,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 195
  },
  {
    "id": "KeyVaultClient#wrapKeyWithHttpOperationResponse",
    "longname": "KeyVaultClient#wrapKeyWithHttpOperationResponse",
    "name": "wrapKeyWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Wraps a symmetric key using a specified key.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the key.",
        "name": "keyVersion"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyOperationResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 9969,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 196
  },
  {
    "id": "KeyVaultClient#wrapKey",
    "longname": "KeyVaultClient#wrapKey",
    "name": "wrapKey",
    "kind": "function",
    "scope": "instance",
    "description": "Wraps a symmetric key using a specified key.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the key.",
        "name": "keyVersion"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyOperationResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyOperationResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 10025,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 197
  },
  {
    "id": "KeyVaultClient#unwrapKeyWithHttpOperationResponse",
    "longname": "KeyVaultClient#unwrapKeyWithHttpOperationResponse",
    "name": "unwrapKeyWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Unwraps a symmetric key using the specified key that was initially used for\rwrapping that key.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the key.",
        "name": "keyVersion"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyOperationResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 10072,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 198
  },
  {
    "id": "KeyVaultClient#unwrapKey",
    "longname": "KeyVaultClient#unwrapKey",
    "name": "unwrapKey",
    "kind": "function",
    "scope": "instance",
    "description": "Unwraps a symmetric key using the specified key that was initially used for\rwrapping that key.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the key.",
        "name": "keyName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the key.",
        "name": "keyVersion"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'",
        "name": "algorithm"
      },
      {
        "type": {
          "names": [
            "buffer"
          ]
        },
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyOperationResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyOperationResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 10129,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 199
  },
  {
    "id": "KeyVaultClient#setSecretWithHttpOperationResponse",
    "longname": "KeyVaultClient#setSecretWithHttpOperationResponse",
    "name": "setSecretWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Sets a secret in a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the secret.",
        "name": "secretName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The value of the secret.",
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of the secret value such as a\rpassword.",
        "name": "options.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The secret management attributes.",
        "name": "options.secretAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the\robject is enabled.",
        "name": "options.secretAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in UTC.",
        "name": "options.secretAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.secretAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<SecretBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 10185,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 200
  },
  {
    "id": "KeyVaultClient#setSecret",
    "longname": "KeyVaultClient#setSecret",
    "name": "setSecret",
    "kind": "function",
    "scope": "instance",
    "description": "Sets a secret in a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the secret.",
        "name": "secretName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The value of the secret.",
        "name": "value"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of the secret value such as a\rpassword.",
        "name": "options.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The secret management attributes.",
        "name": "options.secretAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the\robject is enabled.",
        "name": "options.secretAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in UTC.",
        "name": "options.secretAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.secretAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{SecretBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 10251,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 201
  },
  {
    "id": "KeyVaultClient#deleteSecretWithHttpOperationResponse",
    "longname": "KeyVaultClient#deleteSecretWithHttpOperationResponse",
    "name": "deleteSecretWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes a secret from a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the secret.",
        "name": "secretName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<SecretBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 10290,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 202
  },
  {
    "id": "KeyVaultClient#deleteSecret",
    "longname": "KeyVaultClient#deleteSecret",
    "name": "deleteSecret",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes a secret from a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the secret.",
        "name": "secretName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{SecretBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 10339,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 203
  },
  {
    "id": "KeyVaultClient#updateSecretWithHttpOperationResponse",
    "longname": "KeyVaultClient#updateSecretWithHttpOperationResponse",
    "name": "updateSecretWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Updates the attributes associated with a specified secret in a given key\rvault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the secret.",
        "name": "secretName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the secret.",
        "name": "secretVersion"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of the secret value such as a\rpassword.",
        "name": "options.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The secret management attributes.",
        "name": "options.secretAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the\robject is enabled.",
        "name": "options.secretAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in UTC.",
        "name": "options.secretAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.secretAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<SecretBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 10396,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 204
  },
  {
    "id": "KeyVaultClient#updateSecret",
    "longname": "KeyVaultClient#updateSecret",
    "name": "updateSecret",
    "kind": "function",
    "scope": "instance",
    "description": "Updates the attributes associated with a specified secret in a given key\rvault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the secret.",
        "name": "secretName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the secret.",
        "name": "secretVersion"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of the secret value such as a\rpassword.",
        "name": "options.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The secret management attributes.",
        "name": "options.secretAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the\robject is enabled.",
        "name": "options.secretAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in UTC.",
        "name": "options.secretAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.secretAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{SecretBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 10463,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 205
  },
  {
    "id": "KeyVaultClient#getSecretWithHttpOperationResponse",
    "longname": "KeyVaultClient#getSecretWithHttpOperationResponse",
    "name": "getSecretWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Get a specified secret from a given key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the secret.",
        "name": "secretName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the secret.",
        "name": "secretVersion"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<SecretBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 10504,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 206
  },
  {
    "id": "KeyVaultClient#getSecret",
    "longname": "KeyVaultClient#getSecret",
    "name": "getSecret",
    "kind": "function",
    "scope": "instance",
    "description": "Get a specified secret from a given key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the secret.",
        "name": "secretName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the secret.",
        "name": "secretVersion"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{SecretBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 10555,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 207
  },
  {
    "id": "KeyVaultClient#getSecretsWithHttpOperationResponse",
    "longname": "KeyVaultClient#getSecretsWithHttpOperationResponse",
    "name": "getSecretsWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "List secrets in a specified key vault",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<SecretListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 10595,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 208
  },
  {
    "id": "KeyVaultClient#getSecrets",
    "longname": "KeyVaultClient#getSecrets",
    "name": "getSecrets",
    "kind": "function",
    "scope": "instance",
    "description": "List secrets in a specified key vault",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{SecretListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 10645,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 209
  },
  {
    "id": "KeyVaultClient#getSecretVersionsWithHttpOperationResponse",
    "longname": "KeyVaultClient#getSecretVersionsWithHttpOperationResponse",
    "name": "getSecretVersionsWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "List the versions of the specified secret.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the secret.",
        "name": "secretName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<SecretListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 10687,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 210
  },
  {
    "id": "KeyVaultClient#getSecretVersions",
    "longname": "KeyVaultClient#getSecretVersions",
    "name": "getSecretVersions",
    "kind": "function",
    "scope": "instance",
    "description": "List the versions of the specified secret.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the secret.",
        "name": "secretName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{SecretListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 10739,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 211
  },
  {
    "id": "KeyVaultClient#getCertificatesWithHttpOperationResponse",
    "longname": "KeyVaultClient#getCertificatesWithHttpOperationResponse",
    "name": "getCertificatesWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "List certificates in a specified key vault",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 10779,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 212
  },
  {
    "id": "KeyVaultClient#getCertificates",
    "longname": "KeyVaultClient#getCertificates",
    "name": "getCertificates",
    "kind": "function",
    "scope": "instance",
    "description": "List certificates in a specified key vault",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 10829,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 213
  },
  {
    "id": "KeyVaultClient#deleteCertificateWithHttpOperationResponse",
    "longname": "KeyVaultClient#deleteCertificateWithHttpOperationResponse",
    "name": "deleteCertificateWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes a certificate from a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 10868,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 214
  },
  {
    "id": "KeyVaultClient#deleteCertificate",
    "longname": "KeyVaultClient#deleteCertificate",
    "name": "deleteCertificate",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes a certificate from a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 10917,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 215
  },
  {
    "id": "KeyVaultClient#setCertificateContactsWithHttpOperationResponse",
    "longname": "KeyVaultClient#setCertificateContactsWithHttpOperationResponse",
    "name": "setCertificateContactsWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Sets the certificate contacts for the specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "The contacts for the key vault certificate.",
        "name": "contacts"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "The contact list for the vault\rcertificates.",
        "name": "contacts.contactList"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<Contacts>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 10959,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 216
  },
  {
    "id": "KeyVaultClient#setCertificateContacts",
    "longname": "KeyVaultClient#setCertificateContacts",
    "name": "setCertificateContacts",
    "kind": "function",
    "scope": "instance",
    "description": "Sets the certificate contacts for the specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "The contacts for the key vault certificate.",
        "name": "contacts"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "The contact list for the vault\rcertificates.",
        "name": "contacts.contactList"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{Contacts} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Contacts} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 11011,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 217
  },
  {
    "id": "KeyVaultClient#getCertificateContactsWithHttpOperationResponse",
    "longname": "KeyVaultClient#getCertificateContactsWithHttpOperationResponse",
    "name": "getCertificateContactsWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Lists the certificate contacts for a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<Contacts>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 11048,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 218
  },
  {
    "id": "KeyVaultClient#getCertificateContacts",
    "longname": "KeyVaultClient#getCertificateContacts",
    "name": "getCertificateContacts",
    "kind": "function",
    "scope": "instance",
    "description": "Lists the certificate contacts for a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{Contacts} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Contacts} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 11095,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 219
  },
  {
    "id": "KeyVaultClient#deleteCertificateContactsWithHttpOperationResponse",
    "longname": "KeyVaultClient#deleteCertificateContactsWithHttpOperationResponse",
    "name": "deleteCertificateContactsWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes the certificate contacts for a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<Contacts>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 11132,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 220
  },
  {
    "id": "KeyVaultClient#deleteCertificateContacts",
    "longname": "KeyVaultClient#deleteCertificateContacts",
    "name": "deleteCertificateContacts",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes the certificate contacts for a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{Contacts} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Contacts} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 11179,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 221
  },
  {
    "id": "KeyVaultClient#getCertificateIssuersWithHttpOperationResponse",
    "longname": "KeyVaultClient#getCertificateIssuersWithHttpOperationResponse",
    "name": "getCertificateIssuersWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "List certificate issuers for a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateIssuerListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 11219,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 222
  },
  {
    "id": "KeyVaultClient#getCertificateIssuers",
    "longname": "KeyVaultClient#getCertificateIssuers",
    "name": "getCertificateIssuers",
    "kind": "function",
    "scope": "instance",
    "description": "List certificate issuers for a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateIssuerListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateIssuerListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 11270,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 223
  },
  {
    "id": "KeyVaultClient#setCertificateIssuerWithHttpOperationResponse",
    "longname": "KeyVaultClient#setCertificateIssuerWithHttpOperationResponse",
    "name": "setCertificateIssuerWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Sets the specified certificate issuer.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the issuer.",
        "name": "issuerName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The issuer provider.",
        "name": "provider"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The credentials to be used for the\rissuer.",
        "name": "options.credentials"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The user name/account\rname/account id.",
        "name": "options.credentials.accountId"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The password/secret/account\rkey.",
        "name": "options.credentials.password"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Details of the organization as\rprovided to the issuer.",
        "name": "options.organizationDetails"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Id of the organization.",
        "name": "options.organizationDetails.id"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Details of the\rorganization administrator.",
        "name": "options.organizationDetails.adminDetails"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Attributes of the issuer object.",
        "name": "options.attributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the issuer\ris enabled.",
        "name": "options.attributes.enabled"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<IssuerBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 11333,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 224
  },
  {
    "id": "KeyVaultClient#setCertificateIssuer",
    "longname": "KeyVaultClient#setCertificateIssuer",
    "name": "setCertificateIssuer",
    "kind": "function",
    "scope": "instance",
    "description": "Sets the specified certificate issuer.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the issuer.",
        "name": "issuerName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The issuer provider.",
        "name": "provider"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The credentials to be used for the\rissuer.",
        "name": "options.credentials"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The user name/account\rname/account id.",
        "name": "options.credentials.accountId"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The password/secret/account\rkey.",
        "name": "options.credentials.password"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Details of the organization as\rprovided to the issuer.",
        "name": "options.organizationDetails"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Id of the organization.",
        "name": "options.organizationDetails.id"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Details of the\rorganization administrator.",
        "name": "options.organizationDetails.adminDetails"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Attributes of the issuer object.",
        "name": "options.attributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the issuer\ris enabled.",
        "name": "options.attributes.enabled"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{IssuerBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link IssuerBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 11406,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 225
  },
  {
    "id": "KeyVaultClient#updateCertificateIssuerWithHttpOperationResponse",
    "longname": "KeyVaultClient#updateCertificateIssuerWithHttpOperationResponse",
    "name": "updateCertificateIssuerWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Updates the specified certificate issuer.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the issuer.",
        "name": "issuerName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The issuer provider.",
        "name": "options.provider"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The credentials to be used for the\rissuer.",
        "name": "options.credentials"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The user name/account\rname/account id.",
        "name": "options.credentials.accountId"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The password/secret/account\rkey.",
        "name": "options.credentials.password"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Details of the organization as\rprovided to the issuer.",
        "name": "options.organizationDetails"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Id of the organization.",
        "name": "options.organizationDetails.id"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Details of the\rorganization administrator.",
        "name": "options.organizationDetails.adminDetails"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Attributes of the issuer object.",
        "name": "options.attributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the issuer\ris enabled.",
        "name": "options.attributes.enabled"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<IssuerBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 11469,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 226
  },
  {
    "id": "KeyVaultClient#updateCertificateIssuer",
    "longname": "KeyVaultClient#updateCertificateIssuer",
    "name": "updateCertificateIssuer",
    "kind": "function",
    "scope": "instance",
    "description": "Updates the specified certificate issuer.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the issuer.",
        "name": "issuerName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The issuer provider.",
        "name": "options.provider"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The credentials to be used for the\rissuer.",
        "name": "options.credentials"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The user name/account\rname/account id.",
        "name": "options.credentials.accountId"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The password/secret/account\rkey.",
        "name": "options.credentials.password"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Details of the organization as\rprovided to the issuer.",
        "name": "options.organizationDetails"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Id of the organization.",
        "name": "options.organizationDetails.id"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Details of the\rorganization administrator.",
        "name": "options.organizationDetails.adminDetails"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Attributes of the issuer object.",
        "name": "options.attributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether the issuer\ris enabled.",
        "name": "options.attributes.enabled"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{IssuerBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link IssuerBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 11542,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 227
  },
  {
    "id": "KeyVaultClient#getCertificateIssuerWithHttpOperationResponse",
    "longname": "KeyVaultClient#getCertificateIssuerWithHttpOperationResponse",
    "name": "getCertificateIssuerWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Lists the specified certificate issuer.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the issuer.",
        "name": "issuerName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<IssuerBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 11581,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 228
  },
  {
    "id": "KeyVaultClient#getCertificateIssuer",
    "longname": "KeyVaultClient#getCertificateIssuer",
    "name": "getCertificateIssuer",
    "kind": "function",
    "scope": "instance",
    "description": "Lists the specified certificate issuer.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the issuer.",
        "name": "issuerName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{IssuerBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link IssuerBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 11630,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 229
  },
  {
    "id": "KeyVaultClient#deleteCertificateIssuerWithHttpOperationResponse",
    "longname": "KeyVaultClient#deleteCertificateIssuerWithHttpOperationResponse",
    "name": "deleteCertificateIssuerWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes the specified certificate issuer.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the issuer.",
        "name": "issuerName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<IssuerBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 11669,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 230
  },
  {
    "id": "KeyVaultClient#deleteCertificateIssuer",
    "longname": "KeyVaultClient#deleteCertificateIssuer",
    "name": "deleteCertificateIssuer",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes the specified certificate issuer.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the issuer.",
        "name": "issuerName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{IssuerBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link IssuerBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 11718,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 231
  },
  {
    "id": "KeyVaultClient#createCertificateWithHttpOperationResponse",
    "longname": "KeyVaultClient#createCertificateWithHttpOperationResponse",
    "name": "createCertificateWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Creates a new certificate. If this is the first version, the certificate\rresource is created.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The management policy for the\rcertificate.",
        "name": "options.certificatePolicy"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the\rkey backing a certificate.",
        "name": "options.certificatePolicy.keyProperties"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the private key can be exported.",
        "name": "options.certificatePolicy.keyProperties.exportable"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The key\rtype.",
        "name": "options.certificatePolicy.keyProperties.keyType"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The key\rsize in bytes. For example;  1024 or 2048.",
        "name": "options.certificatePolicy.keyProperties.keySize"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the same key pair will be used on certificate renewal.",
        "name": "options.certificatePolicy.keyProperties.reuseKey"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of\rthe secret backing a certificate.",
        "name": "options.certificatePolicy.secretProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The\rmedia type (MIME type).",
        "name": "options.certificatePolicy.secretProperties.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the X509 component of a certificate.",
        "name": "options.certificatePolicy.x509CertificateProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The subject\rname. Should be a valid X509 distinguished Name.",
        "name": "options.certificatePolicy.x509CertificateProperties.subject"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "The enhanced key usage.",
        "name": "options.certificatePolicy.x509CertificateProperties.ekus"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The subject alternative names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Email addresses.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Domain names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "User principal names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "List of key\rusages.",
        "name": "options.certificatePolicy.x509CertificateProperties.keyUsage"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The\rduration that the ceritifcate is valid in months.",
        "name": "options.certificatePolicy.x509CertificateProperties.validityInMonths"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Actions that will\rbe performed by Key Vault over the lifetime of a certificate.",
        "name": "options.certificatePolicy.lifetimeActions"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Parameters for\rthe issuer of the X509 component of a certificate.",
        "name": "options.certificatePolicy.issuerParameters"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Name of\rthe referenced issuer object or reserved names; for example, 'Self' or\r'Unknown'.",
        "name": "options.certificatePolicy.issuerParameters.name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of certificate to be requested from the issuer provider.",
        "name": "options.certificatePolicy.issuerParameters.certificateType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The certificate\rattributes.",
        "name": "options.certificatePolicy.attributes"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The attributes of the\rcertificate (optional).",
        "name": "options.certificateAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether\rthe object is enabled.",
        "name": "options.certificateAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in\rUTC.",
        "name": "options.certificateAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.certificateAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateOperation>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 11846,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 232
  },
  {
    "id": "KeyVaultClient#createCertificate",
    "longname": "KeyVaultClient#createCertificate",
    "name": "createCertificate",
    "kind": "function",
    "scope": "instance",
    "description": "Creates a new certificate. If this is the first version, the certificate\rresource is created.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The management policy for the\rcertificate.",
        "name": "options.certificatePolicy"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the\rkey backing a certificate.",
        "name": "options.certificatePolicy.keyProperties"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the private key can be exported.",
        "name": "options.certificatePolicy.keyProperties.exportable"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The key\rtype.",
        "name": "options.certificatePolicy.keyProperties.keyType"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The key\rsize in bytes. For example;  1024 or 2048.",
        "name": "options.certificatePolicy.keyProperties.keySize"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the same key pair will be used on certificate renewal.",
        "name": "options.certificatePolicy.keyProperties.reuseKey"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of\rthe secret backing a certificate.",
        "name": "options.certificatePolicy.secretProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The\rmedia type (MIME type).",
        "name": "options.certificatePolicy.secretProperties.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the X509 component of a certificate.",
        "name": "options.certificatePolicy.x509CertificateProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The subject\rname. Should be a valid X509 distinguished Name.",
        "name": "options.certificatePolicy.x509CertificateProperties.subject"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "The enhanced key usage.",
        "name": "options.certificatePolicy.x509CertificateProperties.ekus"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The subject alternative names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Email addresses.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Domain names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "User principal names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "List of key\rusages.",
        "name": "options.certificatePolicy.x509CertificateProperties.keyUsage"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The\rduration that the ceritifcate is valid in months.",
        "name": "options.certificatePolicy.x509CertificateProperties.validityInMonths"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Actions that will\rbe performed by Key Vault over the lifetime of a certificate.",
        "name": "options.certificatePolicy.lifetimeActions"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Parameters for\rthe issuer of the X509 component of a certificate.",
        "name": "options.certificatePolicy.issuerParameters"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Name of\rthe referenced issuer object or reserved names; for example, 'Self' or\r'Unknown'.",
        "name": "options.certificatePolicy.issuerParameters.name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of certificate to be requested from the issuer provider.",
        "name": "options.certificatePolicy.issuerParameters.certificateType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The certificate\rattributes.",
        "name": "options.certificatePolicy.attributes"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The attributes of the\rcertificate (optional).",
        "name": "options.certificateAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether\rthe object is enabled.",
        "name": "options.certificateAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in\rUTC.",
        "name": "options.certificateAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.certificateAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateOperation} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateOperation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 11984,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 233
  },
  {
    "id": "KeyVaultClient#importCertificateWithHttpOperationResponse",
    "longname": "KeyVaultClient#importCertificateWithHttpOperationResponse",
    "name": "importCertificateWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Imports a certificate into a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Base64 encoded representation of\rthe certificate object to import. This certificate needs to contain the\rprivate key.",
        "name": "base64EncodedCertificate"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "If the private key in\rbase64EncodedCertificate is encrypted, the password used for encryption.",
        "name": "options.password"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The management policy for the\rcertificate.",
        "name": "options.certificatePolicy"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the\rkey backing a certificate.",
        "name": "options.certificatePolicy.keyProperties"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the private key can be exported.",
        "name": "options.certificatePolicy.keyProperties.exportable"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The key\rtype.",
        "name": "options.certificatePolicy.keyProperties.keyType"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The key\rsize in bytes. For example;  1024 or 2048.",
        "name": "options.certificatePolicy.keyProperties.keySize"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the same key pair will be used on certificate renewal.",
        "name": "options.certificatePolicy.keyProperties.reuseKey"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of\rthe secret backing a certificate.",
        "name": "options.certificatePolicy.secretProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The\rmedia type (MIME type).",
        "name": "options.certificatePolicy.secretProperties.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the X509 component of a certificate.",
        "name": "options.certificatePolicy.x509CertificateProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The subject\rname. Should be a valid X509 distinguished Name.",
        "name": "options.certificatePolicy.x509CertificateProperties.subject"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "The enhanced key usage.",
        "name": "options.certificatePolicy.x509CertificateProperties.ekus"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The subject alternative names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Email addresses.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Domain names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "User principal names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "List of key\rusages.",
        "name": "options.certificatePolicy.x509CertificateProperties.keyUsage"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The\rduration that the ceritifcate is valid in months.",
        "name": "options.certificatePolicy.x509CertificateProperties.validityInMonths"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Actions that will\rbe performed by Key Vault over the lifetime of a certificate.",
        "name": "options.certificatePolicy.lifetimeActions"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Parameters for\rthe issuer of the X509 component of a certificate.",
        "name": "options.certificatePolicy.issuerParameters"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Name of\rthe referenced issuer object or reserved names; for example, 'Self' or\r'Unknown'.",
        "name": "options.certificatePolicy.issuerParameters.name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of certificate to be requested from the issuer provider.",
        "name": "options.certificatePolicy.issuerParameters.certificateType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The certificate\rattributes.",
        "name": "options.certificatePolicy.attributes"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The attributes of the\rcertificate (optional).",
        "name": "options.certificateAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether\rthe object is enabled.",
        "name": "options.certificateAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in\rUTC.",
        "name": "options.certificateAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.certificateAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 12118,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 234
  },
  {
    "id": "KeyVaultClient#importCertificate",
    "longname": "KeyVaultClient#importCertificate",
    "name": "importCertificate",
    "kind": "function",
    "scope": "instance",
    "description": "Imports a certificate into a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Base64 encoded representation of\rthe certificate object to import. This certificate needs to contain the\rprivate key.",
        "name": "base64EncodedCertificate"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "If the private key in\rbase64EncodedCertificate is encrypted, the password used for encryption.",
        "name": "options.password"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The management policy for the\rcertificate.",
        "name": "options.certificatePolicy"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the\rkey backing a certificate.",
        "name": "options.certificatePolicy.keyProperties"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the private key can be exported.",
        "name": "options.certificatePolicy.keyProperties.exportable"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The key\rtype.",
        "name": "options.certificatePolicy.keyProperties.keyType"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The key\rsize in bytes. For example;  1024 or 2048.",
        "name": "options.certificatePolicy.keyProperties.keySize"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the same key pair will be used on certificate renewal.",
        "name": "options.certificatePolicy.keyProperties.reuseKey"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of\rthe secret backing a certificate.",
        "name": "options.certificatePolicy.secretProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The\rmedia type (MIME type).",
        "name": "options.certificatePolicy.secretProperties.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the X509 component of a certificate.",
        "name": "options.certificatePolicy.x509CertificateProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The subject\rname. Should be a valid X509 distinguished Name.",
        "name": "options.certificatePolicy.x509CertificateProperties.subject"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "The enhanced key usage.",
        "name": "options.certificatePolicy.x509CertificateProperties.ekus"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The subject alternative names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Email addresses.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Domain names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "User principal names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "List of key\rusages.",
        "name": "options.certificatePolicy.x509CertificateProperties.keyUsage"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The\rduration that the ceritifcate is valid in months.",
        "name": "options.certificatePolicy.x509CertificateProperties.validityInMonths"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Actions that will\rbe performed by Key Vault over the lifetime of a certificate.",
        "name": "options.certificatePolicy.lifetimeActions"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Parameters for\rthe issuer of the X509 component of a certificate.",
        "name": "options.certificatePolicy.issuerParameters"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Name of\rthe referenced issuer object or reserved names; for example, 'Self' or\r'Unknown'.",
        "name": "options.certificatePolicy.issuerParameters.name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of certificate to be requested from the issuer provider.",
        "name": "options.certificatePolicy.issuerParameters.certificateType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The certificate\rattributes.",
        "name": "options.certificatePolicy.attributes"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The attributes of the\rcertificate (optional).",
        "name": "options.certificateAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether\rthe object is enabled.",
        "name": "options.certificateAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in\rUTC.",
        "name": "options.certificateAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.certificateAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 12262,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 235
  },
  {
    "id": "KeyVaultClient#getCertificateVersionsWithHttpOperationResponse",
    "longname": "KeyVaultClient#getCertificateVersionsWithHttpOperationResponse",
    "name": "getCertificateVersionsWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "List the versions of a certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 12304,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 236
  },
  {
    "id": "KeyVaultClient#getCertificateVersions",
    "longname": "KeyVaultClient#getCertificateVersions",
    "name": "getCertificateVersions",
    "kind": "function",
    "scope": "instance",
    "description": "List the versions of a certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results.",
        "name": "options.maxresults"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 12356,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 237
  },
  {
    "id": "KeyVaultClient#getCertificatePolicyWithHttpOperationResponse",
    "longname": "KeyVaultClient#getCertificatePolicyWithHttpOperationResponse",
    "name": "getCertificatePolicyWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Lists the policy for a certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate in a given key\rvault.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificatePolicy>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 12396,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 238
  },
  {
    "id": "KeyVaultClient#getCertificatePolicy",
    "longname": "KeyVaultClient#getCertificatePolicy",
    "name": "getCertificatePolicy",
    "kind": "function",
    "scope": "instance",
    "description": "Lists the policy for a certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate in a given key\rvault.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificatePolicy} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificatePolicy} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 12446,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 239
  },
  {
    "id": "KeyVaultClient#updateCertificatePolicyWithHttpOperationResponse",
    "longname": "KeyVaultClient#updateCertificatePolicyWithHttpOperationResponse",
    "name": "updateCertificatePolicyWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Updates the policy for a certificate. Set specified members in the\rcertificate policy. Leave others as null.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate in the given\rvault.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "The policy for the certificate.",
        "name": "certificatePolicy"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the key\rbacking a certificate.",
        "name": "certificatePolicy.keyProperties"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if\rthe private key can be exported.",
        "name": "certificatePolicy.keyProperties.exportable"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The key type.",
        "name": "certificatePolicy.keyProperties.keyType"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The key size in\rbytes. For example;  1024 or 2048.",
        "name": "certificatePolicy.keyProperties.keySize"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the\rsame key pair will be used on certificate renewal.",
        "name": "certificatePolicy.keyProperties.reuseKey"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the\rsecret backing a certificate.",
        "name": "certificatePolicy.secretProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The media\rtype (MIME type).",
        "name": "certificatePolicy.secretProperties.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of\rthe X509 component of a certificate.",
        "name": "certificatePolicy.x509CertificateProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The\rsubject name. Should be a valid X509 distinguished Name.",
        "name": "certificatePolicy.x509CertificateProperties.subject"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "The\renhanced key usage.",
        "name": "certificatePolicy.x509CertificateProperties.ekus"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The\rsubject alternative names.",
        "name": "certificatePolicy.x509CertificateProperties.subjectAlternativeNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Email addresses.",
        "name": "certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Domain names.",
        "name": "certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "User principal names.",
        "name": "certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "List\rof key usages.",
        "name": "certificatePolicy.x509CertificateProperties.keyUsage"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The duration\rthat the ceritifcate is valid in months.",
        "name": "certificatePolicy.x509CertificateProperties.validityInMonths"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Actions that will be\rperformed by Key Vault over the lifetime of a certificate.",
        "name": "certificatePolicy.lifetimeActions"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Parameters for the\rissuer of the X509 component of a certificate.",
        "name": "certificatePolicy.issuerParameters"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Name of the\rreferenced issuer object or reserved names; for example, 'Self' or\r'Unknown'.",
        "name": "certificatePolicy.issuerParameters.name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of\rcertificate to be requested from the issuer provider.",
        "name": "certificatePolicy.issuerParameters.certificateType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The certificate attributes.",
        "name": "certificatePolicy.attributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether\rthe object is enabled.",
        "name": "certificatePolicy.attributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in\rUTC.",
        "name": "certificatePolicy.attributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "certificatePolicy.attributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificatePolicy>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 12564,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 240
  },
  {
    "id": "KeyVaultClient#updateCertificatePolicy",
    "longname": "KeyVaultClient#updateCertificatePolicy",
    "name": "updateCertificatePolicy",
    "kind": "function",
    "scope": "instance",
    "description": "Updates the policy for a certificate. Set specified members in the\rcertificate policy. Leave others as null.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate in the given\rvault.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "The policy for the certificate.",
        "name": "certificatePolicy"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the key\rbacking a certificate.",
        "name": "certificatePolicy.keyProperties"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if\rthe private key can be exported.",
        "name": "certificatePolicy.keyProperties.exportable"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The key type.",
        "name": "certificatePolicy.keyProperties.keyType"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The key size in\rbytes. For example;  1024 or 2048.",
        "name": "certificatePolicy.keyProperties.keySize"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the\rsame key pair will be used on certificate renewal.",
        "name": "certificatePolicy.keyProperties.reuseKey"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the\rsecret backing a certificate.",
        "name": "certificatePolicy.secretProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The media\rtype (MIME type).",
        "name": "certificatePolicy.secretProperties.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of\rthe X509 component of a certificate.",
        "name": "certificatePolicy.x509CertificateProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The\rsubject name. Should be a valid X509 distinguished Name.",
        "name": "certificatePolicy.x509CertificateProperties.subject"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "The\renhanced key usage.",
        "name": "certificatePolicy.x509CertificateProperties.ekus"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The\rsubject alternative names.",
        "name": "certificatePolicy.x509CertificateProperties.subjectAlternativeNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Email addresses.",
        "name": "certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Domain names.",
        "name": "certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "User principal names.",
        "name": "certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "List\rof key usages.",
        "name": "certificatePolicy.x509CertificateProperties.keyUsage"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The duration\rthat the ceritifcate is valid in months.",
        "name": "certificatePolicy.x509CertificateProperties.validityInMonths"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Actions that will be\rperformed by Key Vault over the lifetime of a certificate.",
        "name": "certificatePolicy.lifetimeActions"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Parameters for the\rissuer of the X509 component of a certificate.",
        "name": "certificatePolicy.issuerParameters"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Name of the\rreferenced issuer object or reserved names; for example, 'Self' or\r'Unknown'.",
        "name": "certificatePolicy.issuerParameters.name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of\rcertificate to be requested from the issuer provider.",
        "name": "certificatePolicy.issuerParameters.certificateType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The certificate attributes.",
        "name": "certificatePolicy.attributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether\rthe object is enabled.",
        "name": "certificatePolicy.attributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in\rUTC.",
        "name": "certificatePolicy.attributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "certificatePolicy.attributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificatePolicy} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificatePolicy} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 12692,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 241
  },
  {
    "id": "KeyVaultClient#updateCertificateWithHttpOperationResponse",
    "longname": "KeyVaultClient#updateCertificateWithHttpOperationResponse",
    "name": "updateCertificateWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Updates the specified attributes associated with the given certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate in the given key\rvault.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the certificate.",
        "name": "certificateVersion"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The management policy for the\rcertificate.",
        "name": "options.certificatePolicy"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the\rkey backing a certificate.",
        "name": "options.certificatePolicy.keyProperties"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the private key can be exported.",
        "name": "options.certificatePolicy.keyProperties.exportable"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The key\rtype.",
        "name": "options.certificatePolicy.keyProperties.keyType"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The key\rsize in bytes. For example;  1024 or 2048.",
        "name": "options.certificatePolicy.keyProperties.keySize"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the same key pair will be used on certificate renewal.",
        "name": "options.certificatePolicy.keyProperties.reuseKey"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of\rthe secret backing a certificate.",
        "name": "options.certificatePolicy.secretProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The\rmedia type (MIME type).",
        "name": "options.certificatePolicy.secretProperties.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the X509 component of a certificate.",
        "name": "options.certificatePolicy.x509CertificateProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The subject\rname. Should be a valid X509 distinguished Name.",
        "name": "options.certificatePolicy.x509CertificateProperties.subject"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "The enhanced key usage.",
        "name": "options.certificatePolicy.x509CertificateProperties.ekus"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The subject alternative names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Email addresses.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Domain names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "User principal names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "List of key\rusages.",
        "name": "options.certificatePolicy.x509CertificateProperties.keyUsage"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The\rduration that the ceritifcate is valid in months.",
        "name": "options.certificatePolicy.x509CertificateProperties.validityInMonths"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Actions that will\rbe performed by Key Vault over the lifetime of a certificate.",
        "name": "options.certificatePolicy.lifetimeActions"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Parameters for\rthe issuer of the X509 component of a certificate.",
        "name": "options.certificatePolicy.issuerParameters"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Name of\rthe referenced issuer object or reserved names; for example, 'Self' or\r'Unknown'.",
        "name": "options.certificatePolicy.issuerParameters.name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of certificate to be requested from the issuer provider.",
        "name": "options.certificatePolicy.issuerParameters.certificateType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The certificate\rattributes.",
        "name": "options.certificatePolicy.attributes"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The attributes of the\rcertificate (optional).",
        "name": "options.certificateAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether\rthe object is enabled.",
        "name": "options.certificateAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in\rUTC.",
        "name": "options.certificateAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.certificateAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 12822,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 242
  },
  {
    "id": "KeyVaultClient#updateCertificate",
    "longname": "KeyVaultClient#updateCertificate",
    "name": "updateCertificate",
    "kind": "function",
    "scope": "instance",
    "description": "Updates the specified attributes associated with the given certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate in the given key\rvault.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the certificate.",
        "name": "certificateVersion"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The management policy for the\rcertificate.",
        "name": "options.certificatePolicy"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the\rkey backing a certificate.",
        "name": "options.certificatePolicy.keyProperties"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the private key can be exported.",
        "name": "options.certificatePolicy.keyProperties.exportable"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The key\rtype.",
        "name": "options.certificatePolicy.keyProperties.keyType"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The key\rsize in bytes. For example;  1024 or 2048.",
        "name": "options.certificatePolicy.keyProperties.keySize"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Indicates if the same key pair will be used on certificate renewal.",
        "name": "options.certificatePolicy.keyProperties.reuseKey"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of\rthe secret backing a certificate.",
        "name": "options.certificatePolicy.secretProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The\rmedia type (MIME type).",
        "name": "options.certificatePolicy.secretProperties.contentType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Properties of the X509 component of a certificate.",
        "name": "options.certificatePolicy.x509CertificateProperties"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The subject\rname. Should be a valid X509 distinguished Name.",
        "name": "options.certificatePolicy.x509CertificateProperties.subject"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "The enhanced key usage.",
        "name": "options.certificatePolicy.x509CertificateProperties.ekus"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The subject alternative names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Email addresses.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Domain names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "User principal names.",
        "name": "options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "List of key\rusages.",
        "name": "options.certificatePolicy.x509CertificateProperties.keyUsage"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "The\rduration that the ceritifcate is valid in months.",
        "name": "options.certificatePolicy.x509CertificateProperties.validityInMonths"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "Actions that will\rbe performed by Key Vault over the lifetime of a certificate.",
        "name": "options.certificatePolicy.lifetimeActions"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Parameters for\rthe issuer of the X509 component of a certificate.",
        "name": "options.certificatePolicy.issuerParameters"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Name of\rthe referenced issuer object or reserved names; for example, 'Self' or\r'Unknown'.",
        "name": "options.certificatePolicy.issuerParameters.name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Type of certificate to be requested from the issuer provider.",
        "name": "options.certificatePolicy.issuerParameters.certificateType"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The certificate\rattributes.",
        "name": "options.certificatePolicy.attributes"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The attributes of the\rcertificate (optional).",
        "name": "options.certificateAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether\rthe object is enabled.",
        "name": "options.certificateAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in\rUTC.",
        "name": "options.certificateAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.certificateAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 12962,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 243
  },
  {
    "id": "KeyVaultClient#getCertificateWithHttpOperationResponse",
    "longname": "KeyVaultClient#getCertificateWithHttpOperationResponse",
    "name": "getCertificateWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Gets information about a specified certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate in the given\rvault.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the certificate.",
        "name": "certificateVersion"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 13004,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 244
  },
  {
    "id": "KeyVaultClient#getCertificate",
    "longname": "KeyVaultClient#getCertificate",
    "name": "getCertificate",
    "kind": "function",
    "scope": "instance",
    "description": "Gets information about a specified certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate in the given\rvault.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The version of the certificate.",
        "name": "certificateVersion"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 13056,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 245
  },
  {
    "id": "KeyVaultClient#updateCertificateOperationWithHttpOperationResponse",
    "longname": "KeyVaultClient#updateCertificateOperationWithHttpOperationResponse",
    "name": "updateCertificateOperationWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Updates a certificate operation.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "Indicates if cancellation was\rrequested on the certificate operation.",
        "name": "cancellationRequested"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateOperation>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 13098,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 246
  },
  {
    "id": "KeyVaultClient#updateCertificateOperation",
    "longname": "KeyVaultClient#updateCertificateOperation",
    "name": "updateCertificateOperation",
    "kind": "function",
    "scope": "instance",
    "description": "Updates a certificate operation.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "Indicates if cancellation was\rrequested on the certificate operation.",
        "name": "cancellationRequested"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateOperation} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateOperation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 13150,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 247
  },
  {
    "id": "KeyVaultClient#getCertificateOperationWithHttpOperationResponse",
    "longname": "KeyVaultClient#getCertificateOperationWithHttpOperationResponse",
    "name": "getCertificateOperationWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Gets the operation associated with a specified certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateOperation>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 13189,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 248
  },
  {
    "id": "KeyVaultClient#getCertificateOperation",
    "longname": "KeyVaultClient#getCertificateOperation",
    "name": "getCertificateOperation",
    "kind": "function",
    "scope": "instance",
    "description": "Gets the operation associated with a specified certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateOperation} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateOperation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 13238,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 249
  },
  {
    "id": "KeyVaultClient#deleteCertificateOperationWithHttpOperationResponse",
    "longname": "KeyVaultClient#deleteCertificateOperationWithHttpOperationResponse",
    "name": "deleteCertificateOperationWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes the operation for a specified certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateOperation>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 13277,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 250
  },
  {
    "id": "KeyVaultClient#deleteCertificateOperation",
    "longname": "KeyVaultClient#deleteCertificateOperation",
    "name": "deleteCertificateOperation",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes the operation for a specified certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateOperation} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateOperation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 13326,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 251
  },
  {
    "id": "KeyVaultClient#mergeCertificateWithHttpOperationResponse",
    "longname": "KeyVaultClient#mergeCertificateWithHttpOperationResponse",
    "name": "mergeCertificateWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Merges a certificate or a certificate chain with a key pair existing on the\rserver.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "description": "The certificate or the certificate chain to\rmerge.",
        "name": "x509Certificates"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The attributes of the\rcertificate (optional).",
        "name": "options.certificateAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether\rthe object is enabled.",
        "name": "options.certificateAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in\rUTC.",
        "name": "options.certificateAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.certificateAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateBundle>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 13383,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 252
  },
  {
    "id": "KeyVaultClient#mergeCertificate",
    "longname": "KeyVaultClient#mergeCertificate",
    "name": "mergeCertificate",
    "kind": "function",
    "scope": "instance",
    "description": "Merges a certificate or a certificate chain with a key pair existing on the\rserver.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The vault name, for example\rhttps://myvault.vault.azure.net.",
        "name": "vaultBaseUrl"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The name of the certificate.",
        "name": "certificateName"
      },
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "description": "The certificate or the certificate chain to\rmerge.",
        "name": "x509Certificates"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "The attributes of the\rcertificate (optional).",
        "name": "options.certificateAttributes"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "Determines whether\rthe object is enabled.",
        "name": "options.certificateAttributes.enabled"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Not before date in\rUTC.",
        "name": "options.certificateAttributes.notBefore"
      },
      {
        "type": {
          "names": [
            "date"
          ]
        },
        "optional": true,
        "description": "Expiry date in UTC.",
        "name": "options.certificateAttributes.expires"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Application specific metadata in the form of\rkey-value pairs.",
        "name": "options.tags"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateBundle} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 13450,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 253
  },
  {
    "id": "KeyVaultClient#getKeyVersionsNextWithHttpOperationResponse",
    "longname": "KeyVaultClient#getKeyVersionsNextWithHttpOperationResponse",
    "name": "getKeyVersionsNextWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "Retrieves a list of individual key versions with the same key name. The full\rkey identifier, attributes, and tags are provided in the response.\rAuthorization: Requires the keys/list permission.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 13489,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 254
  },
  {
    "id": "KeyVaultClient#getKeyVersionsNext",
    "longname": "KeyVaultClient#getKeyVersionsNext",
    "name": "getKeyVersionsNext",
    "kind": "function",
    "scope": "instance",
    "description": "Retrieves a list of individual key versions with the same key name. The full\rkey identifier, attributes, and tags are provided in the response.\rAuthorization: Requires the keys/list permission.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 13538,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 255
  },
  {
    "id": "KeyVaultClient#getKeysNextWithHttpOperationResponse",
    "longname": "KeyVaultClient#getKeysNextWithHttpOperationResponse",
    "name": "getKeysNextWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "List keys in the specified vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<KeyListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 13575,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 256
  },
  {
    "id": "KeyVaultClient#getKeysNext",
    "longname": "KeyVaultClient#getKeysNext",
    "name": "getKeysNext",
    "kind": "function",
    "scope": "instance",
    "description": "List keys in the specified vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{KeyListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 13622,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 257
  },
  {
    "id": "KeyVaultClient#getSecretsNextWithHttpOperationResponse",
    "longname": "KeyVaultClient#getSecretsNextWithHttpOperationResponse",
    "name": "getSecretsNextWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "List secrets in a specified key vault",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<SecretListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 13659,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 258
  },
  {
    "id": "KeyVaultClient#getSecretsNext",
    "longname": "KeyVaultClient#getSecretsNext",
    "name": "getSecretsNext",
    "kind": "function",
    "scope": "instance",
    "description": "List secrets in a specified key vault",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{SecretListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 13706,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 259
  },
  {
    "id": "KeyVaultClient#getSecretVersionsNextWithHttpOperationResponse",
    "longname": "KeyVaultClient#getSecretVersionsNextWithHttpOperationResponse",
    "name": "getSecretVersionsNextWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "List the versions of the specified secret.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<SecretListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 13743,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 260
  },
  {
    "id": "KeyVaultClient#getSecretVersionsNext",
    "longname": "KeyVaultClient#getSecretVersionsNext",
    "name": "getSecretVersionsNext",
    "kind": "function",
    "scope": "instance",
    "description": "List the versions of the specified secret.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{SecretListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 13790,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 261
  },
  {
    "id": "KeyVaultClient#getCertificatesNextWithHttpOperationResponse",
    "longname": "KeyVaultClient#getCertificatesNextWithHttpOperationResponse",
    "name": "getCertificatesNextWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "List certificates in a specified key vault",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 13827,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 262
  },
  {
    "id": "KeyVaultClient#getCertificatesNext",
    "longname": "KeyVaultClient#getCertificatesNext",
    "name": "getCertificatesNext",
    "kind": "function",
    "scope": "instance",
    "description": "List certificates in a specified key vault",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 13874,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 263
  },
  {
    "id": "KeyVaultClient#getCertificateIssuersNextWithHttpOperationResponse",
    "longname": "KeyVaultClient#getCertificateIssuersNextWithHttpOperationResponse",
    "name": "getCertificateIssuersNextWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "List certificate issuers for a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateIssuerListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 13911,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 264
  },
  {
    "id": "KeyVaultClient#getCertificateIssuersNext",
    "longname": "KeyVaultClient#getCertificateIssuersNext",
    "name": "getCertificateIssuersNext",
    "kind": "function",
    "scope": "instance",
    "description": "List certificate issuers for a specified key vault.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateIssuerListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateIssuerListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 13959,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 265
  },
  {
    "id": "KeyVaultClient#getCertificateVersionsNextWithHttpOperationResponse",
    "longname": "KeyVaultClient#getCertificateVersionsNextWithHttpOperationResponse",
    "name": "getCertificateVersionsNextWithHttpOperationResponse",
    "kind": "function",
    "scope": "instance",
    "description": "List the versions of a certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{HttpOperationResponse<CertificateListResult>} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object."
      }
    ],
    "meta": {
      "lineno": 13996,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 266
  },
  {
    "id": "KeyVaultClient#getCertificateVersionsNext",
    "longname": "KeyVaultClient#getCertificateVersionsNext",
    "name": "getCertificateVersionsNext",
    "kind": "function",
    "scope": "instance",
    "description": "List the versions of a certificate.",
    "memberof": "KeyVaultClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The NextLink from the previous successful call\rto List operation.",
        "name": "nextPageLink"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Optional Parameters.",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Headers that will be added to the\rrequest",
        "name": "options.customHeaders"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "The optional callback.",
        "name": "optionalCallback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function",
            "Promise"
          ]
        },
        "description": "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      }
    ],
    "customTags": [
      {
        "tag": "resolve",
        "value": "{CertificateListResult} - The deserialized result object."
      },
      {
        "tag": "reject",
        "value": "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      }
    ],
    "meta": {
      "lineno": 14043,
      "filename": "keyVaultClient.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 267
  },
  {
    "id": "Action#mapper",
    "longname": "Action#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of Action",
    "memberof": "Action",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of Action"
      }
    ],
    "meta": {
      "lineno": 33,
      "filename": "action.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 273
  },
  {
    "id": "AdministratorDetails#mapper",
    "longname": "AdministratorDetails#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of AdministratorDetails",
    "memberof": "AdministratorDetails",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of AdministratorDetails"
      }
    ],
    "meta": {
      "lineno": 38,
      "filename": "administratorDetails.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 275
  },
  {
    "id": "Attributes#mapper",
    "longname": "Attributes#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of Attributes",
    "memberof": "Attributes",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of Attributes"
      }
    ],
    "meta": {
      "lineno": 40,
      "filename": "attributes.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 277
  },
  {
    "id": "BackupKeyResult#mapper",
    "longname": "BackupKeyResult#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of BackupKeyResult",
    "memberof": "BackupKeyResult",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of BackupKeyResult"
      }
    ],
    "meta": {
      "lineno": 32,
      "filename": "backupKeyResult.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 279
  },
  {
    "id": "CertificateAttributes#mapper",
    "longname": "CertificateAttributes#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of CertificateAttributes",
    "memberof": "CertificateAttributes",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of CertificateAttributes"
      }
    ],
    "meta": {
      "lineno": 33,
      "filename": "certificateAttributes.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 281
  },
  {
    "id": "CertificateBundle#mapper",
    "longname": "CertificateBundle#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of CertificateBundle",
    "memberof": "CertificateBundle",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of CertificateBundle"
      }
    ],
    "meta": {
      "lineno": 117,
      "filename": "certificateBundle.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 283
  },
  {
    "id": "CertificateCreateParameters#mapper",
    "longname": "CertificateCreateParameters#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of CertificateCreateParameters",
    "memberof": "CertificateCreateParameters",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of CertificateCreateParameters"
      }
    ],
    "meta": {
      "lineno": 110,
      "filename": "certificateCreateParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 285
  },
  {
    "id": "CertificateImportParameters#mapper",
    "longname": "CertificateImportParameters#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of CertificateImportParameters",
    "memberof": "CertificateImportParameters",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of CertificateImportParameters"
      }
    ],
    "meta": {
      "lineno": 117,
      "filename": "certificateImportParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 287
  },
  {
    "id": "CertificateIssuerItem#mapper",
    "longname": "CertificateIssuerItem#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of CertificateIssuerItem",
    "memberof": "CertificateIssuerItem",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of CertificateIssuerItem"
      }
    ],
    "meta": {
      "lineno": 34,
      "filename": "certificateIssuerItem.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 289
  },
  {
    "id": "CertificateIssuerListResult#mapper",
    "longname": "CertificateIssuerListResult#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of CertificateIssuerListResult",
    "memberof": "CertificateIssuerListResult",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of CertificateIssuerListResult"
      }
    ],
    "meta": {
      "lineno": 34,
      "filename": "certificateIssuerListResult.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 291
  },
  {
    "id": "CertificateIssuerSetParameters#mapper",
    "longname": "CertificateIssuerSetParameters#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of CertificateIssuerSetParameters",
    "memberof": "CertificateIssuerSetParameters",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of CertificateIssuerSetParameters"
      }
    ],
    "meta": {
      "lineno": 58,
      "filename": "certificateIssuerSetParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 293
  },
  {
    "id": "CertificateIssuerUpdateParameters#mapper",
    "longname": "CertificateIssuerUpdateParameters#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of CertificateIssuerUpdateParameters",
    "memberof": "CertificateIssuerUpdateParameters",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of CertificateIssuerUpdateParameters"
      }
    ],
    "meta": {
      "lineno": 58,
      "filename": "certificateIssuerUpdateParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 295
  },
  {
    "id": "CertificateItem#mapper",
    "longname": "CertificateItem#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of CertificateItem",
    "memberof": "CertificateItem",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of CertificateItem"
      }
    ],
    "meta": {
      "lineno": 41,
      "filename": "certificateItem.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 297
  },
  {
    "id": "CertificateListResult#mapper",
    "longname": "CertificateListResult#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of CertificateListResult",
    "memberof": "CertificateListResult",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of CertificateListResult"
      }
    ],
    "meta": {
      "lineno": 33,
      "filename": "certificateListResult.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 299
  },
  {
    "id": "CertificateMergeParameters#mapper",
    "longname": "CertificateMergeParameters#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of CertificateMergeParameters",
    "memberof": "CertificateMergeParameters",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of CertificateMergeParameters"
      }
    ],
    "meta": {
      "lineno": 41,
      "filename": "certificateMergeParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 301
  },
  {
    "id": "CertificateOperation#mapper",
    "longname": "CertificateOperation#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of CertificateOperation",
    "memberof": "CertificateOperation",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of CertificateOperation"
      }
    ],
    "meta": {
      "lineno": 68,
      "filename": "certificateOperation.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 303
  },
  {
    "id": "CertificateOperationUpdateParameter#mapper",
    "longname": "CertificateOperationUpdateParameter#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of CertificateOperationUpdateParameter",
    "memberof": "CertificateOperationUpdateParameter",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of CertificateOperationUpdateParameter"
      }
    ],
    "meta": {
      "lineno": 33,
      "filename": "certificateOperationUpdateParameter.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 305
  },
  {
    "id": "CertificatePolicy#mapper",
    "longname": "CertificatePolicy#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of CertificatePolicy",
    "memberof": "CertificatePolicy",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of CertificatePolicy"
      }
    ],
    "meta": {
      "lineno": 92,
      "filename": "certificatePolicy.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 307
  },
  {
    "id": "CertificateUpdateParameters#mapper",
    "longname": "CertificateUpdateParameters#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of CertificateUpdateParameters",
    "memberof": "CertificateUpdateParameters",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of CertificateUpdateParameters"
      }
    ],
    "meta": {
      "lineno": 110,
      "filename": "certificateUpdateParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 309
  },
  {
    "id": "Contact#mapper",
    "longname": "Contact#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of Contact",
    "memberof": "Contact",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of Contact"
      }
    ],
    "meta": {
      "lineno": 36,
      "filename": "contact.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 311
  },
  {
    "id": "Contacts#mapper",
    "longname": "Contacts#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of Contacts",
    "memberof": "Contacts",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of Contacts"
      }
    ],
    "meta": {
      "lineno": 36,
      "filename": "contacts.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 313
  },
  {
    "id": "ErrorModel#mapper",
    "longname": "ErrorModel#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of ErrorModel",
    "memberof": "ErrorModel",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of ErrorModel"
      }
    ],
    "meta": {
      "lineno": 38,
      "filename": "errorModel.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 315
  },
  {
    "id": "IssuerAttributes#mapper",
    "longname": "IssuerAttributes#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of IssuerAttributes",
    "memberof": "IssuerAttributes",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of IssuerAttributes"
      }
    ],
    "meta": {
      "lineno": 36,
      "filename": "issuerAttributes.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 317
  },
  {
    "id": "IssuerBundle#mapper",
    "longname": "IssuerBundle#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of IssuerBundle",
    "memberof": "IssuerBundle",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of IssuerBundle"
      }
    ],
    "meta": {
      "lineno": 60,
      "filename": "issuerBundle.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 319
  },
  {
    "id": "IssuerCredentials#mapper",
    "longname": "IssuerCredentials#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of IssuerCredentials",
    "memberof": "IssuerCredentials",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of IssuerCredentials"
      }
    ],
    "meta": {
      "lineno": 34,
      "filename": "issuerCredentials.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 321
  },
  {
    "id": "IssuerParameters#mapper",
    "longname": "IssuerParameters#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of IssuerParameters",
    "memberof": "IssuerParameters",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of IssuerParameters"
      }
    ],
    "meta": {
      "lineno": 36,
      "filename": "issuerParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 323
  },
  {
    "id": "JsonWebKey#mapper",
    "longname": "JsonWebKey#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of JsonWebKey",
    "memberof": "JsonWebKey",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of JsonWebKey"
      }
    ],
    "meta": {
      "lineno": 58,
      "filename": "jsonWebKey.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 325
  },
  {
    "id": "KeyAttributes#mapper",
    "longname": "KeyAttributes#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of KeyAttributes",
    "memberof": "KeyAttributes",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of KeyAttributes"
      }
    ],
    "meta": {
      "lineno": 33,
      "filename": "keyAttributes.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 327
  },
  {
    "id": "KeyBundle#mapper",
    "longname": "KeyBundle#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of KeyBundle",
    "memberof": "KeyBundle",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of KeyBundle"
      }
    ],
    "meta": {
      "lineno": 70,
      "filename": "keyBundle.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 329
  },
  {
    "id": "KeyCreateParameters#mapper",
    "longname": "KeyCreateParameters#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of KeyCreateParameters",
    "memberof": "KeyCreateParameters",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of KeyCreateParameters"
      }
    ],
    "meta": {
      "lineno": 45,
      "filename": "keyCreateParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 331
  },
  {
    "id": "KeyImportParameters#mapper",
    "longname": "KeyImportParameters#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of KeyImportParameters",
    "memberof": "KeyImportParameters",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of KeyImportParameters"
      }
    ],
    "meta": {
      "lineno": 70,
      "filename": "keyImportParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 333
  },
  {
    "id": "KeyItem#mapper",
    "longname": "KeyItem#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of KeyItem",
    "memberof": "KeyItem",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of KeyItem"
      }
    ],
    "meta": {
      "lineno": 42,
      "filename": "keyItem.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 335
  },
  {
    "id": "KeyListResult#mapper",
    "longname": "KeyListResult#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of KeyListResult",
    "memberof": "KeyListResult",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of KeyListResult"
      }
    ],
    "meta": {
      "lineno": 33,
      "filename": "keyListResult.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 337
  },
  {
    "id": "KeyOperationResult#mapper",
    "longname": "KeyOperationResult#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of KeyOperationResult",
    "memberof": "KeyOperationResult",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of KeyOperationResult"
      }
    ],
    "meta": {
      "lineno": 34,
      "filename": "keyOperationResult.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 339
  },
  {
    "id": "KeyOperationsParameters#mapper",
    "longname": "KeyOperationsParameters#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of KeyOperationsParameters",
    "memberof": "KeyOperationsParameters",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of KeyOperationsParameters"
      }
    ],
    "meta": {
      "lineno": 35,
      "filename": "keyOperationsParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 341
  },
  {
    "id": "KeyProperties#mapper",
    "longname": "KeyProperties#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of KeyProperties",
    "memberof": "KeyProperties",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of KeyProperties"
      }
    ],
    "meta": {
      "lineno": 40,
      "filename": "keyProperties.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 343
  },
  {
    "id": "KeyRestoreParameters#mapper",
    "longname": "KeyRestoreParameters#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of KeyRestoreParameters",
    "memberof": "KeyRestoreParameters",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of KeyRestoreParameters"
      }
    ],
    "meta": {
      "lineno": 33,
      "filename": "keyRestoreParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 345
  },
  {
    "id": "KeySignParameters#mapper",
    "longname": "KeySignParameters#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of KeySignParameters",
    "memberof": "KeySignParameters",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of KeySignParameters"
      }
    ],
    "meta": {
      "lineno": 37,
      "filename": "keySignParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 347
  },
  {
    "id": "KeyUpdateParameters#mapper",
    "longname": "KeyUpdateParameters#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of KeyUpdateParameters",
    "memberof": "KeyUpdateParameters",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of KeyUpdateParameters"
      }
    ],
    "meta": {
      "lineno": 40,
      "filename": "keyUpdateParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 349
  },
  {
    "id": "KeyVaultError#mapper",
    "longname": "KeyVaultError#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of KeyVaultError",
    "memberof": "KeyVaultError",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of KeyVaultError"
      }
    ],
    "meta": {
      "lineno": 40,
      "filename": "keyVaultError.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 351
  },
  {
    "id": "KeyVerifyParameters#mapper",
    "longname": "KeyVerifyParameters#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of KeyVerifyParameters",
    "memberof": "KeyVerifyParameters",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of KeyVerifyParameters"
      }
    ],
    "meta": {
      "lineno": 38,
      "filename": "keyVerifyParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 353
  },
  {
    "id": "KeyVerifyResult#mapper",
    "longname": "KeyVerifyResult#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of KeyVerifyResult",
    "memberof": "KeyVerifyResult",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of KeyVerifyResult"
      }
    ],
    "meta": {
      "lineno": 33,
      "filename": "keyVerifyResult.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 355
  },
  {
    "id": "LifetimeAction#mapper",
    "longname": "LifetimeAction#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of LifetimeAction",
    "memberof": "LifetimeAction",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of LifetimeAction"
      }
    ],
    "meta": {
      "lineno": 45,
      "filename": "lifetimeAction.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 357
  },
  {
    "id": "OrganizationDetails#mapper",
    "longname": "OrganizationDetails#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of OrganizationDetails",
    "memberof": "OrganizationDetails",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of OrganizationDetails"
      }
    ],
    "meta": {
      "lineno": 36,
      "filename": "organizationDetails.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 359
  },
  {
    "id": "PendingCertificateSigningRequestResult#mapper",
    "longname": "PendingCertificateSigningRequestResult#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of PendingCertificateSigningRequestResult",
    "memberof": "PendingCertificateSigningRequestResult",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of PendingCertificateSigningRequestResult"
      }
    ],
    "meta": {
      "lineno": 33,
      "filename": "pendingCertificateSigningRequestResult.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 361
  },
  {
    "id": "SecretAttributes#mapper",
    "longname": "SecretAttributes#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of SecretAttributes",
    "memberof": "SecretAttributes",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of SecretAttributes"
      }
    ],
    "meta": {
      "lineno": 33,
      "filename": "secretAttributes.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 363
  },
  {
    "id": "SecretBundle#mapper",
    "longname": "SecretBundle#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of SecretBundle",
    "memberof": "SecretBundle",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of SecretBundle"
      }
    ],
    "meta": {
      "lineno": 49,
      "filename": "secretBundle.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 365
  },
  {
    "id": "SecretItem#mapper",
    "longname": "SecretItem#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of SecretItem",
    "memberof": "SecretItem",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of SecretItem"
      }
    ],
    "meta": {
      "lineno": 44,
      "filename": "secretItem.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 367
  },
  {
    "id": "SecretListResult#mapper",
    "longname": "SecretListResult#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of SecretListResult",
    "memberof": "SecretListResult",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of SecretListResult"
      }
    ],
    "meta": {
      "lineno": 33,
      "filename": "secretListResult.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 369
  },
  {
    "id": "SecretProperties#mapper",
    "longname": "SecretProperties#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of SecretProperties",
    "memberof": "SecretProperties",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of SecretProperties"
      }
    ],
    "meta": {
      "lineno": 32,
      "filename": "secretProperties.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 371
  },
  {
    "id": "SecretSetParameters#mapper",
    "longname": "SecretSetParameters#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of SecretSetParameters",
    "memberof": "SecretSetParameters",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of SecretSetParameters"
      }
    ],
    "meta": {
      "lineno": 41,
      "filename": "secretSetParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 373
  },
  {
    "id": "SecretUpdateParameters#mapper",
    "longname": "SecretUpdateParameters#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of SecretUpdateParameters",
    "memberof": "SecretUpdateParameters",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of SecretUpdateParameters"
      }
    ],
    "meta": {
      "lineno": 39,
      "filename": "secretUpdateParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 375
  },
  {
    "id": "SubjectAlternativeNames#mapper",
    "longname": "SubjectAlternativeNames#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of SubjectAlternativeNames",
    "memberof": "SubjectAlternativeNames",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of SubjectAlternativeNames"
      }
    ],
    "meta": {
      "lineno": 36,
      "filename": "subjectAlternativeNames.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 377
  },
  {
    "id": "Trigger#mapper",
    "longname": "Trigger#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of Trigger",
    "memberof": "Trigger",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of Trigger"
      }
    ],
    "meta": {
      "lineno": 35,
      "filename": "trigger.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 379
  },
  {
    "id": "X509CertificateProperties#mapper",
    "longname": "X509CertificateProperties#mapper",
    "name": "mapper",
    "kind": "function",
    "scope": "instance",
    "description": "Defines the metadata of X509CertificateProperties",
    "memberof": "X509CertificateProperties",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "metadata of X509CertificateProperties"
      }
    ],
    "meta": {
      "lineno": 50,
      "filename": "x509CertificateProperties.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 381
  },
  {
    "id": "JsonWebKeyEncryptionAlgorithms.RSAOAEP",
    "longname": "JsonWebKeyEncryptionAlgorithms.RSAOAEP",
    "name": "RSAOAEP",
    "kind": "member",
    "scope": "static",
    "memberof": "JsonWebKeyEncryptionAlgorithms",
    "meta": {
      "lineno": 28,
      "filename": "jwk.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 1
  },
  {
    "id": "JsonWebKeyEncryptionAlgorithms.RSA15",
    "longname": "JsonWebKeyEncryptionAlgorithms.RSA15",
    "name": "RSA15",
    "kind": "member",
    "scope": "static",
    "memberof": "JsonWebKeyEncryptionAlgorithms",
    "meta": {
      "lineno": 30,
      "filename": "jwk.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 2
  },
  {
    "id": "JsonWebKeySignatureAlgorithms.RS256",
    "longname": "JsonWebKeySignatureAlgorithms.RS256",
    "name": "RS256",
    "kind": "member",
    "scope": "static",
    "memberof": "JsonWebKeySignatureAlgorithms",
    "meta": {
      "lineno": 39,
      "filename": "jwk.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 4
  },
  {
    "id": "JsonWebKeySignatureAlgorithms.RS384",
    "longname": "JsonWebKeySignatureAlgorithms.RS384",
    "name": "RS384",
    "kind": "member",
    "scope": "static",
    "memberof": "JsonWebKeySignatureAlgorithms",
    "meta": {
      "lineno": 41,
      "filename": "jwk.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 5
  },
  {
    "id": "JsonWebKeySignatureAlgorithms.RS512",
    "longname": "JsonWebKeySignatureAlgorithms.RS512",
    "name": "RS512",
    "kind": "member",
    "scope": "static",
    "memberof": "JsonWebKeySignatureAlgorithms",
    "meta": {
      "lineno": 43,
      "filename": "jwk.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 6
  },
  {
    "id": "JsonWebKeySignatureAlgorithms.RSNULL",
    "longname": "JsonWebKeySignatureAlgorithms.RSNULL",
    "name": "RSNULL",
    "kind": "member",
    "scope": "static",
    "memberof": "JsonWebKeySignatureAlgorithms",
    "meta": {
      "lineno": 45,
      "filename": "jwk.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 7
  },
  {
    "id": "JsonWebKeyType.EC",
    "longname": "JsonWebKeyType.EC",
    "name": "EC",
    "kind": "member",
    "scope": "static",
    "memberof": "JsonWebKeyType",
    "meta": {
      "lineno": 54,
      "filename": "jwk.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 9
  },
  {
    "id": "JsonWebKeyType.RSA",
    "longname": "JsonWebKeyType.RSA",
    "name": "RSA",
    "kind": "member",
    "scope": "static",
    "memberof": "JsonWebKeyType",
    "meta": {
      "lineno": 56,
      "filename": "jwk.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 10
  },
  {
    "id": "JsonWebKeyType.RSAHSM",
    "longname": "JsonWebKeyType.RSAHSM",
    "name": "RSAHSM",
    "kind": "member",
    "scope": "static",
    "memberof": "JsonWebKeyType",
    "meta": {
      "lineno": 58,
      "filename": "jwk.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 11
  },
  {
    "id": "JsonWebKeyType.OCT",
    "longname": "JsonWebKeyType.OCT",
    "name": "OCT",
    "kind": "member",
    "scope": "static",
    "memberof": "JsonWebKeyType",
    "meta": {
      "lineno": 60,
      "filename": "jwk.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 12
  },
  {
    "id": "attributes.updated",
    "longname": "attributes.updated",
    "name": "updated",
    "kind": "member",
    "scope": "static",
    "classdesc": "Initializes a new instance of the CertificateIssuerSetParameters class.",
    "description": "The issuer provider.",
    "memberof": "attributes",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "certificateIssuerSetParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 292
  },
  {
    "id": "attributes.updated",
    "longname": "attributes.updated",
    "name": "updated",
    "kind": "member",
    "scope": "static",
    "classdesc": "Initializes a new instance of the CertificateIssuerUpdateParameters class.",
    "description": "The issuer provider.",
    "memberof": "attributes",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "certificateIssuerUpdateParameters.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 294
  },
  {
    "id": "attributes.updated",
    "longname": "attributes.updated",
    "name": "updated",
    "kind": "member",
    "scope": "static",
    "classdesc": "Initializes a new instance of the IssuerBundle class.",
    "description": "Identifier for the issuer object.",
    "memberof": "attributes",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "issuerBundle.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 318
  },
  {
    "id": "error.innerError",
    "longname": "error.innerError",
    "name": "innerError",
    "kind": "member",
    "scope": "static",
    "classdesc": "Initializes a new instance of the KeyVaultError class.",
    "description": "The error code.",
    "memberof": "error",
    "type": {
      "names": [
        "object"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "keyVaultError.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 350
  },
  {
    "id": "action.actionType",
    "longname": "action.actionType",
    "name": "actionType",
    "kind": "member",
    "scope": "static",
    "classdesc": "Initializes a new instance of the LifetimeAction class.",
    "description": "The condition that will execute the action.",
    "memberof": "action",
    "type": {
      "names": [
        "object"
      ]
    },
    "optional": true,
    "meta": {
      "lineno": 15,
      "filename": "lifetimeAction.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib\\models"
    },
    "order": 356
  },
  {
    "id": "KeyVaultCredentials~authRequest",
    "longname": "KeyVaultCredentials~authRequest",
    "name": "authRequest",
    "kind": "typedef",
    "scope": "inner",
    "memberof": "KeyVaultCredentials",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "The service defined challenge. This contains the value of a 'www-authenticate' header. Typical fields are authorization and resource.",
        "name": "challenge"
      },
      {
        "type": {
          "names": [
            "KeyVaultCredentials~authResponse"
          ]
        },
        "description": "A callback that must be called with the result of authorization.",
        "name": "callback"
      }
    ],
    "type": {
      "names": [
        "function"
      ]
    },
    "meta": {
      "lineno": 122,
      "filename": "keyVaultCredentials.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 270
  },
  {
    "id": "KeyVaultCredentials~authResponse",
    "longname": "KeyVaultCredentials~authResponse",
    "name": "authResponse",
    "kind": "typedef",
    "scope": "inner",
    "memberof": "KeyVaultCredentials",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "An error object. Must be null if the authentication was successful.",
        "name": "err"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The contents of an 'authorization' header that answers the challenge. Typically a string in the format 'Bearer &lt;token&gt;'.",
        "name": "authorization"
      }
    ],
    "type": {
      "names": [
        "function"
      ]
    },
    "meta": {
      "lineno": 128,
      "filename": "keyVaultCredentials.js",
      "path": "D:\\Git\\azure-sdk-for-node\\lib\\services\\keyVault\\lib"
    },
    "order": 271
  }
]
